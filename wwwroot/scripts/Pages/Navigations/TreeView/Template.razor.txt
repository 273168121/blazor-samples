@page "/TreeView/Template"

@using Syncfusion.EJ2.Blazor.Lists
@using Syncfusion.EJ2.Blazor.Navigations

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Template";
    SampleBrowser.CurrentControlName = "TreeView";
    SampleBrowser.CurrentControlCategory = "Navigations";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeView;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample demonstrates the template functionalities of the TreeView. Select the root node by clicking on it, or expand the root node and select the customized child node.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @" <p>The <code>TreeView</code> component  has an option to customize the node structure through the <code>nodeTemplate</code> property, so that the tree node can be formed with any custom structure.</p>
    <p>In this demo, the node is formed as like webmail with folder name and number of unread messages.</p>"

    };
}
@*End:Hidden*@

<div class="control_wrapper">
<EjsTreeView ModelType="@ModelType" TValue="TreeData">
    <TreeViewFieldsSettings Id="Id" TValue="TreeData" Text="Name" ParentID="Pid" HasChildren="HasChild" Selected="Selected" Expanded="Expanded" DataSource="@localData"></TreeViewFieldsSettings>
    <TreeViewTemplates>
        <NodeTemplate>
            <div>
                <div class="treeviewdiv">
                    <div style="float:left">
                        <span class="treeName">@((context as TreeData).Name)</span>
                    </div>
                    @{

                        @if (((context as TreeData).Count) != 0)
                        {
                            <div style="margin-right: 5px; float:right">
                                <span class="treeCount e-badge e-badge-primary">@((context as TreeData).Count)</span>
                            </div>
                        }
                    }
                </div>
            </div>
        </NodeTemplate>
    </TreeViewTemplates>
</EjsTreeView>
</div>

@code{

    private List<TreeData> localData = new List<TreeData>();
    public TreeData ModelType = new TreeData();
    protected override void OnInit()
    {
        base.OnInit();
        localData.Add(new TreeData
        {
            Id = 1,
            Name = "Favorites",
            HasChild = true,
        });
        localData.Add(new TreeData
        {
            Id = 2,
            Pid = 1,
            Name = "Sales Reports",
            Count = 4

        });
        localData.Add(new TreeData
        {
            Id = 3,
            Pid = 1,
            Name = "Sent Items"
        });

        localData.Add(new TreeData
        {
            Id = 4,
            Pid = 1,
            Name = "Marketing Reports",
            Count = 6
        });
        localData.Add(new TreeData
        {
            Id = 5,
            HasChild = true,
            Name = "My Folder",
            Expanded = true
        });
        localData.Add(new TreeData
        {
            Id = 6,
            Pid = 5,
            Name = "Inbox",
            Selected = true,
            Count = 20
        });
        localData.Add(new TreeData
        {
            Id = 7,
            Pid = 5,
            Name = "Drafts",
            Count = 5
        });
        localData.Add(new TreeData
        {
            Id = 8,
            Pid = 5,
            Name = "Deleted Items"
        });
        localData.Add(new TreeData
        {
            Id = 9,
            Pid = 5,
            Name = "Sent Items"
        });
        localData.Add(new TreeData
        {
            Id = 10,
            Pid = 5,
            Name = "Sales Reports",
            Count = 4
        });
        localData.Add(new TreeData
        {
            Id = 11,
            Pid = 5,
            Name = "Marketing Reports",
            Count = 6
        });
        localData.Add(new TreeData
        {
            Id = 12,
            Pid = 5,
            Name = "Outbox"
        });

    }
    public class TreeData
    {
        public int Id { get; set; }
        public int? Pid { get; set; }
        public string Name { get; set; }
        public bool HasChild { get; set; }
        public bool Expanded { get; set; }
        public int Count { get; set; }
        public bool Selected { get; set; }
    }
}
<style>
    .control_wrapper {
        max-width: 320px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

    .e-treeview .e-list-text {
        width: 100%;
    }

    .treeCount.e-badge {
        padding: 0.4em;
        vertical-align: text-bottom;
    }

    .material .treeCount.e-badge {
        vertical-align: middle;
    }
</style>

