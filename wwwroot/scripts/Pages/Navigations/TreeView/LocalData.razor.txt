@page "/TreeView/LocalData"

@using Syncfusion.EJ2.Blazor.Lists
@using Syncfusion.EJ2.Blazor.Navigations

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "LocalData";
    SampleBrowser.CurrentControlName = "TreeView";
    SampleBrowser.CurrentControlCategory = "Navigations";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeView;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample demonstrates the binding of local data to the TreeView. Click on node to select it, and click on icon or double click on node to expand/collapse it.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>The TreeView component loads the data through the dataSource property, where the data can be either local data or remote data. In case of local data, the data structure can be hierarchical data or list data (with self-referential format i.e., mapped with the id and parentID fields).

         In this demo, the first TreeView is bound with the hierarchical data that contains array of nested objects. And the second TreeView is bound with the list type data where the parent-child relation is referred by the id and parentID mapping fields.

         More information about Treeview can be found in this <a target='blank' href='https://ej2.syncfusion.com/aspnetcore/documentation/treeview/data-binding/'>documentation section</a> section .
        </p>"
    };
}
@*End:Hidden*@
@using Syncfusion.EJ2
<div class="col-lg-12 control-section">
    <div class="col-lg-6 nested-data">
        <div class="content">
            <h4>Hierarchical Data</h4>
            <Ejstreeview id="continents">
                <TreeViewFieldsSettings DataSource="@continents" Id="code" Text="name" Selected="selected" Expanded="expanded"></TreeViewFieldsSettings>
            </Ejstreeview>
        </div>
    </div>
    <div class="col-lg-6 list-data">
        <div class="content">
            <h4>List Data</h4>
            <Ejstreeview id="listdata">
                <TreeViewFieldsSettings DataSource="@listdata" Id="id" ParentID="pid" Text="name" HasChildren="hasChild" Expanded="expanded"></TreeViewFieldsSettings>
            </Ejstreeview>

        </div>
    </div>
</div>

@code{
    List<object> listdata = new List<object>();

    List<Continents> continents = new List<Continents>();
    List<Countries> countries = new List<Countries>();
    List<Countries> countries2 = new List<Countries>();
    List<Countries> countries3 = new List<Countries>();
    List<Countries> countries4 = new List<Countries>();
    List<Countries> countries5 = new List<Countries>();
    List<Countries> countries6 = new List<Countries>();
    List<Countries> countries7 = new List<Countries>();

    protected override void OnInit()
    {
        base.OnInit();
        this.listdata.Add(new
        {
            id = 1,
            name = "Australia",
            hasChild = true,
            expanded = true
        });
        this.listdata.Add(new
        {
            id = 2,
            pid = 1,
            name = "New South Wales",

        });
        this.listdata.Add(new
        {
            id = 3,
            pid = 1,
            name = "Victoria"
        });

        this.listdata.Add(new
        {
            id = 4,
            pid = 1,
            name = "South Australia"
        });
        this.listdata.Add(new
        {
            id = 6,
            pid = 1,
            name = "Western Australia",

        });
        this.listdata.Add(new
        {
            id = 7,
            name = "Brazil",
            hasChild = true
        });
        this.listdata.Add(new
        {
            id = 8,
            pid = 7,
            name = "Paraná"
        });
        this.listdata.Add(new
        {
            id = 9,
            pid = 7,
            name = "Ceará"
        });
        this.listdata.Add(new
        {
            id = 10,
            pid = 7,
            name = "Acre"
        });
        this.listdata.Add(new
        {
            id = 11,
            name = "China",
            hasChild = true
        });
        this.listdata.Add(new
        {
            id = 12,
            pid = 11,
            name = "Guangzhou"
        });
        this.listdata.Add(new
        {
            id = 13,
            pid = 11,
            name = "Shanghai"
        });
        this.listdata.Add(new
        {
            id = 14,
            pid = 11,
            name = "Beijing"
        });
        this.listdata.Add(new
        {
            id = 15,
            pid = 11,
            name = "Shantou"

        });
        this.listdata.Add(new
        {
            id = 16,
            name = "France",
            hasChild = true

        });
        this.listdata.Add(new
        {
            id = 17,
            pid = 16,
            name = "Pays de la Loire"

        });
        this.listdata.Add(new
        {
            id = 18,
            pid = 16,
            name = "Aquitaine"

        });
        this.listdata.Add(new
        {
            id = 19,
            pid = 16,
            name = "Brittany"

        });
        this.listdata.Add(new
        {
            id = 20,
            pid = 16,
            name = "Lorraine"
        });
        this.listdata.Add(new
        {
            id = 21,
            name = "India",
            hasChild = true

        });
        this.listdata.Add(new
        {
            id = 22,
            pid = 21,
            name = "Assam"

        });
        this.listdata.Add(new
        {
            id = 23,
            pid = 21,
            name = "Bihar"
        });
        this.listdata.Add(new
        {
            id = 24,
            pid = 21,
            name = "Tamil Nadu"

        });

        this.continents.Add(new Continents
        {
            code = "NA",
            name = "North America",
            expanded = true,
            child = countries,
        });
        this.countries.Add(new Countries { code = "USA", name = "United States of America", selected = true });
        this.countries.Add(new Countries { code = "CUB", name = "Cuba" });
        this.countries.Add(new Countries { code = "MEX", name = "Mexico" });

        this.continents.Add(new Continents
        {
            code = "AF",
            name = "Africa",
            child = countries2,
        });
        this.countries2.Add(new Countries { code = "NGA", name = "Nygeria" });
        this.countries2.Add(new Countries { code = "EGY", name = "Egypt" });
        this.countries2.Add(new Countries { code = "ZAF", name = "South Africa" });

        this.continents.Add(new Continents
        {
            code = "AS",
            name = "Asia",
            child = countries3,
        });
        this.countries3.Add(new Countries { code = "CHN", name = "China" });
        this.countries3.Add(new Countries { code = "IND", name = "India" });
        this.countries3.Add(new Countries { code = "JPN", name = "Japan" });

        this.continents.Add(new Continents
        {
            code = "EU",
            name = "Europe",
            child = countries4,
        });
        this.countries4.Add(new Countries { code = "DNK", name = "Denmark" });
        this.countries4.Add(new Countries { code = "FIN", name = "Finland" });
        this.countries4.Add(new Countries { code = "AUT", name = "Austria" });


        this.continents.Add(new Continents
        {
            code = "SA",
            name = "South America",
            child = countries5,
        });
        this.countries5.Add(new Countries { code = "BRA", name = "Brazil" });
        this.countries5.Add(new Countries { code = "COL", name = "Colombia" });
        this.countries5.Add(new Countries { code = "ARG", name = "Argentina" });


        this.continents.Add(new Continents
        {
            code = "OC",
            name = "Oceania",
            child = countries6,
        });
        this.countries6.Add(new Countries { code = "AUS", name = "Australia" });
        this.countries6.Add(new Countries { code = "NZL", name = "Newzealand" });
        this.countries6.Add(new Countries { code = "WSM", name = "Samoa" });


        this.continents.Add(new Continents
        {
            code = "AN",
            name = "Antartica",
            child = countries7,
        });
        this.countries7.Add(new Countries { code = "BVT", name = "Bouvet Island" });
        this.countries7.Add(new Countries { code = "ATF", name = "French Southern Lands" });
    }
    public class Continents
    {
        public string code { get; set; }
        public string name { get; set; }
        public bool expanded { get; set; }
        public bool selected { get; set; }
        public List<Countries> child;

    }
    public class Countries
    {
        public string code { get; set; }
        public string name { get; set; }
        public bool expanded { get; set; }
        public bool selected { get; set; }

    }
}

<style>
    .control_wrapper {
        max-width: 500px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

    .nested-data, .list-data {
        padding: 15px;
        margin-bottom: 25px;
    }

    .content {
        margin: 0 auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

        .content h4 {
            padding: 0 10px;
        }
</style>