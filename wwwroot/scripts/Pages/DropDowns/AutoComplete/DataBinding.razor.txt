@page "/AutoComplete/DataBinding"

@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Data Binding";
    SampleBrowser.CurrentControlName = "AutoComplete";
    SampleBrowser.CurrentControlCategory = "AutoComplete";
    SampleBrowser.CurrentControl = SampleBrowser.Config.AutoComplete;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the different data binding supports of the AutoComplete. Type a character(s) in the AutoComplete element and the remaining characters are automatically filled based on the first matched item.
            Also, provided option to enable/disable this <code>autofill</code> feature in the property panel.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>The AutoComplete loads the data either from local data sources or remote data services through the <code>dataSource</code> property. It supports the data type of <code>array</code> or <code>DataManager</code>.</p>
        <p>
            The DataManager, that act as an interface between service endpoint and AutoComplete, will require the follwoing minimal
            information to interact with the service endpoint properly.
        </p>
        <ul>
            <li><code>DataManager->url</code> - Defines the service endpoint to fetch data.</li>
            <li>
                <code>DataManager->adaptor</code> - Defines the adaptor option. By default, <code>ODataAdaptor</code> is used for
                remote binding.
            </li>
        </ul>
        <p>
            The adaptor is responsible for processing response and request from/to the service endpoint.
            <code>syncfusion/ejs-data</code> package provides some predefined adaptors that are designed to interact with particular
            service endpoints. They are:
        </p>
        <ul>
            <li><code>UrlAdaptor</code> - Use this to interact any remote services.</li>
            <li><code>ODataAdaptor</code> - Use this to interact with OData endpoints.</li>
            <li><code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.</li>
            <li><code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.</li>
            <li><code>WebMethodAdaptor</code> - Use this to interact with web methods.</li>
        </ul>
        <p>
            In this sample, the local data is bound to a collection of sports data and the remote data is bound to a collection of
            customer data as an instance of <code>DataManager</code>. Also, provided option to enable/disable <code>autofill</code>        feature in the property panel.
            <code>StartsWith</code> filter type is set in this sample for showcase the autofill behavior.
        </p>
        <p>
            More information on the data binding feature configuration can be found in the
            <a href=""https://ej2.syncfusion.com/aspnetcore/documentation/auto-complete/data-binding/"" target=""_blank""> documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section col-lg-12">

    <div id='local-data'>
        <div class='content'>
            <h4>Local Data</h4>
            <EjsAutoComplete ID="country" PlaceHolder="e.g. Australia" DataSource="@localdata" SortOrder="@sort" AutoFill="true" FilterType="@Syncfusion.EJ2.Blazor.DropDowns.FilterType.StartsWith" Fields="@AutoCompleteFieldSettings"></EjsAutoComplete>
        </div>
    </div>
</div>

<style>
    #local-data {
        width: 350px;
        margin: 0 auto;
        padding-top: 15px;
    }
</style>

@code{
    List<object> localdata = new List<object>
    {
    new { Name = "Australia", Code = "AU" },
    new { Name = "Bermuda", Code = "BM" },
    new { Name = "Canada", Code = "CA" },
    new { Name = "Cameroon", Code = "CM" },
    new { Name = "Denmark", Code = "DK" },
    new { Name = "France", Code = "FR" },
    new { Name = "Finland", Code = "FI" },
    new { Name = "Germany", Code = "DE" },
    new { Name = "Greenland", Code = "GL" },
    new { Name = "Hong Kong", Code = "HK" },
    new { Name = "India", Code = "IN" },
    new { Name = "Italy", Code = "IT" },
    new { Name = "Japan", Code = "JP" },
    new { Name = "Mexico", Code = "MX" },
    new { Name = "Norway", Code = "NO" },
    new { Name = "Poland", Code = "PL" },
    new { Name = "Switzerland", Code = "CH" },
    new { Name = "United Kingdom", Code = "GB" },
    new { Name = "United States", Code = "US" },
    };

    public object AutoCompleteFieldSettings = new { value = "Name" };
    public string sort { get; set; } = "Ascending";
    }
