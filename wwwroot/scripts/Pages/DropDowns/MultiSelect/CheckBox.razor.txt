@page "/MultiSelect/CheckBox"

@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Buttons

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "CheckBox";
    SampleBrowser.CurrentControlName = "MultiSelect";
    SampleBrowser.CurrentControlCategory = "MultiSelect";
    SampleBrowser.CurrentControl = SampleBrowser.Config.MultiSelect;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the checkbox functionalities of the MultiSelect.Click the MultiSelect element and then type a character in the search box. It will display the filtered list items based on the typed characters and then select the multiple values through the checkbox.</p>"
    };
    SampleBrowser.Description = new string[] {
        @" <p>
            The MultiSelect has built-in support to select the multiple values through checkbox, when the <code>mode</code> property is set as <code>checkbox</code>.
        </p>
        <p>In this sample, the local data is bound to a collection of countries data. Also, provided options for the following:
        <p> To enable/disable the <code>Select All</code> feature in the property panel.</p>
        <p> To enable/disable the <code>DropDown Button</code>feature in the property panel.</p>
        <p> To enable/disable the <code>Selection Reorder</code>feature in the property panel.</p>
        </p>
        <p>The checkbox sample illustrates  using the countries data. </p>
        <p>
            More information on the MultiSelect instantiation can be found in the
            <a href=""https://ej2.syncfusion.com/aspnetcore/documentation/multi-select/getting-started/"" target=""_blank""> documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@


<div class="control-section col-lg-12 checkbox">
    <div class="col-lg-9">
        <div class='content multiselect-checkbox'>
            <EjsMultiSelect @ref="MultiSelectObj" ID="checkList" PlaceHolder="Select countries" Mode="@VisualMode.CheckBox" DataSource="@country" ShowSelectAll="@ShowSelectAllCheckBox" ShowDropDownIcon="true" FilterBarPlaceholder="Search countries" PopupHeight="350px">
                <MultiSelectFieldSettings text="Name" value="Code"></MultiSelectFieldSettings>
            </EjsMultiSelect>
        </div>
    </div>
    <div class="col-lg-3">
        <div class='content property-section'>
            <table>
                <tr>
                    <td>
                        <EjsCheckBox id="showselectall" Label="ShowSelectAll" Checked="true" ValueChange="@OnSelectAllChange"></EjsCheckBox>
                    </td>
                </tr>
                <tr>
                    <td>
                        <EjsCheckBox id="dropdownbutton" Label="DropDown Button" Checked="true" ValueChange="@OnDropDownButtonChange"></EjsCheckBox>
                    </td>
                </tr>
                <tr>
                    <td>
                        <EjsCheckBox id="seletionreorder" Label="Selection reorder" Checked="true" ValueChange="@OnSeletionReorder"></EjsCheckBox>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<style>
    .property-section .e-checkbox-wrapper {
        margin: 10px;
    }
       
    .control-section.checkbox {
        margin-top: 20px;
    }

    .multiselect-checkbox {
        width: 70%;
        margin-left: 70px;
    }
</style>

@code{

    EjsMultiSelect MultiSelectObj;
    private bool ShowSelectAllCheckBox {get; set;} = true;

    public void OnSelectAllChange(@Syncfusion.EJ2.Blazor.Buttons.ChangeEventArgs args) {
    this.MultiSelectObj.ShowSelectAll = args.Checked;
    this.MultiSelectObj.DataBind();
    }

    public void OnDropDownButtonChange(@Syncfusion.EJ2.Blazor.Buttons.ChangeEventArgs args) {
    this.MultiSelectObj.ShowDropDownIcon = args.Checked;
    this.MultiSelectObj.DataBind();
    }

    public void OnSeletionReorder(@Syncfusion.EJ2.Blazor.Buttons.ChangeEventArgs args) {
    this.MultiSelectObj.EnableSelectionOrder = args.Checked;
    this.MultiSelectObj.DataBind();
    }

    public class countries
    {
    public string Name { get; set; }

    public string Code { get; set; }
    }

    List<countries>  country = new List<countries>
    {
        new countries() { Name = "Australia", Code = "AU" },
        new countries() { Name = "Bermuda", Code = "BM" },
        new countries() { Name = "Canada", Code = "CA" },
        new countries() { Name = "Cameroon", Code = "CM" },
        new countries() { Name = "Denmark", Code = "DK" },
        new countries() { Name = "France", Code = "FR" },
        new countries() { Name = "Finland", Code = "FI" },
        new countries() { Name = "Germany", Code = "DE" },
        new countries() { Name = "Greenland", Code = "GL" },
        new countries() { Name = "Hong Kong", Code = "HK" },
        new countries() { Name = "India", Code = "IN" },
        new countries() { Name = "Italy", Code = "IT" },
        new countries() { Name = "Japan", Code = "JP" },
        new countries() { Name = "Mexico", Code = "MX" },
        new countries() { Name = "Norway", Code = "NO" },
        new countries() { Name = "Poland", Code = "PL" },
        new countries() { Name = "Switzerland", Code = "CH" },
        new countries() { Name = "United Kingdom", Code = "GB" },
        new countries() { Name = "United States", Code = "US" },
    };
    public string RemoteQuery = "new ej.data.Query().select(['FirstName']).take(10).requiresCount()";
    public string sort { get; set; } = "Ascending";
}