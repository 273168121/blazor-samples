@page "/ListBox/Api"

@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "API";
    SampleBrowser.CurrentControlName = "ListBox";
    SampleBrowser.CurrentControlCategory = "ListBox";
    SampleBrowser.CurrentControl = SampleBrowser.Config.ListBox;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the API functionalities of the ListBox component by using its properties from the property pane. Select any combination of properties from the property pane to achieve desired functionalities in ListBox.</p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this demo, a ListBox is rendered with grouping feature by setting the <a target='_blank' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.DropDowns.ListBoxFieldSettings~GroupBy.html'><code>groupBy</code></a> property
            in <a target='_blank' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.DropDowns.EjsListBox~Fields.html'><code>fields</code></a> property. This sample has been showcased with following set of properties,
        </p>
   <ul>
            <li>You can switch to <code>Single</code> or <code>Multiple</code> selection mode by selecting the mode from the selection mode dropdown list.</li>
            <li>You can switch to <code>None</code>, <code>Ascending</code>, or <code>Descending</code> sort orders by selecting the sort order from the sort order dropdown list.</li>
        </ul>
        <p>In this sample, by default, grouping is enabled and vegetableData is grouped based on its category. The user can change the sort order and selection type using dropdownlist.</p>"
    };
}
@*End:Hidden*@

<div class="col-lg-8 control-section">
    <div id="listbox-control1">
        <EjsListBox ID="listbox" @ref="ListBox" DataSource="@VegetableData">
            <ListBoxFieldSettings GroupBy="Category" Text="Vegetable" Value="Id"></ListBoxFieldSettings>
            <ListBoxSelectionSettings Mode="@Mode"></ListBoxSelectionSettings>
        </EjsListBox>
    </div>
</div>
<div class="col-lg-4 property-section">
    <table id="property" title="Properties" style="width: 100%">
        <tbody>
            <tr>
                <td style="width: 50%;padding-top:10px">
                    <div>Sort order</div>
                </td>
                <td style="width: 50%;padding-top:10px">
                    <div style="max-width: 200px">
                        <EjsDropDownList ID="ddl" PopupHeight="200px" DataSource="@SortItems" ValueChange="OrderChange" Index="0">
                            <DropDownListFieldSettings Text="Text"></DropDownListFieldSettings>
                        </EjsDropDownList>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 50%;padding-top:10px">
                    <div>Selection Mode</div>
                </td>
                <td style="width: 50%;padding-top:10px">
                    <div style="max-width: 200px">
                        <EjsDropDownList ID="mode" PopupHeight="200px" DataSource="@SelectionType" ValueChange="ModeChange" Index="1">
                            <DropDownListFieldSettings Text="Text"></DropDownListFieldSettings>
                        </EjsDropDownList>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<style>

    #listbox-control {
        width: 49%;
        margin: auto;
        margin-bottom: 15px;
    }

    @@media screen and (max-width: 590px) {
        #listbox-control {
            width: 100%;
        }
    }
</style>


@code{

    EjsListBox ListBox;
    SelectionMode Mode = SelectionMode.Single;
    private void OrderChange(ChangeEventArgs args)
    {
        ListBox.SortOrder = args.Value;
        ListBox.DataBind();
    }

    private void ModeChange(ChangeEventArgs args)
    {
        if (args.Value.ToString() == "Single")
        {
            ListBox.SelectionSettings.Mode = SelectionMode.Single;
        }
        else
        {
            ListBox.SelectionSettings.Mode = SelectionMode.Multiple;
        }
    }

    List<object> SortItems = new List<object>
{
        new { Text = "None" },
        new { Text = "Ascending" },
        new { Text = "Descending" }

        };

    List<object> SelectionType = new List<object>
{
        new { Text = "Single" },
        new { Text = "Multiple" }
        };

    List<object> VegetableData = new List<object>
{
        new { Vegetable = "Cabbage", Category= "Leafy and Salad", Id= "item1" },
        new { Vegetable = "Chickpea", Category= "Beans", Id= "item2" },
        new { Vegetable = "Garlic", Category= "Bulb and Stem", Id= "item3"  },
        new { Vegetable = "Green bean", Category= "Beans", Id= "item4" },
        new { Vegetable = "Horse gram", Category= "Beans", Id= "item5"},
        new { Vegetable = "Nopal", Category= "Bulb and Stem", Id= "item6" },
        new { Vegetable = "Onion", Category= "Bulb and Stem", Id= "item7" },
        new { Vegetable = "Pumpkins", Category= "Leafy and Salad", Id= "item8" },
        new { Vegetable = "Spinach", Category= "Leafy and Salad", Id= "item9" },
        new { Vegetable = "Wheat grass", Category= "Leafy and Salad", Id= "item10" },
        new { Vegetable = "Yarrow", Category = "Leafy and Salad", Id = "item11" }

        };
}
