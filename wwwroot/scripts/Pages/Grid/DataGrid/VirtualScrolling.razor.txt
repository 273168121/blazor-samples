@page "/Grid/VirtualScrolling"

@using Syncfusion.EJ2.Blazor.Grids

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Virtual Scrolling";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the Grid component with the horizontal and vertical scrollbars to view the exceeded grid content.</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>The Grid will show scrollbar when the content exceeds the element width or height.
        The vertical and horizontal scrollbar will be displayed based on the following criteria.
    </p>
    <ul>
        <li>The vertical scrollbar appears
            when the total height of rows present in Grid exceeds its element height.</li>
        <li>The horizontal scrollbar appears
            when the sum of column`s width exceeds Grid element width.</li>
    </ul>
    <p>The <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#height-string---number'>height
        </a></code> and <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#width-string---number'>width
        </a></code> property is used to set the Grid height and width respectively.
    The value of these properties can be a numeric value, pixel(<code>px</code>) or percentage (<code>%</code>).</p>
    <p>
        In this demo, the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#height-string---number'>height
        </a></code> and <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#width-string---number'>width
        </a></code> property of the Grid is set to <strong><em>410</em></strong> and <strong><em>auto</em></strong>
        respectively. Now, the Grid will render with vertical scrollbar when the total height of rows
        exceeds its element height and horizontal scrollbar will appear when the
        total column width exceeds the element width.
    </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <EjsGrid DataSource="@GridData" Height="410" Width="auto" EnableVirtualization="true" EnableColumnVirtualization="true">
                    <GridColumns>
                        <GridColumn Field="Field1" HeaderText="PlayerName" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                        <GridColumn Field="Field2" HeaderText="Year" Width="150"></GridColumn>
                        <GridColumn Field="Field3" HeaderText="Stint" Width="150"></GridColumn>
                        <GridColumn Field="Field4" HeaderText="TMID" Width="150"></GridColumn>
                        <GridColumn Field="Field5" HeaderText="LGID" Width="150"></GridColumn>
                        <GridColumn Field="Field6" HeaderText="GP" Width="150"></GridColumn>
                        <GridColumn Field="Field7" HeaderText="GS" Width="150"></GridColumn>
                        <GridColumn Field="Field8" HeaderText="Minutes" Width="150"></GridColumn>
                        <GridColumn Field="Field9" HeaderText="Points" Width="150"></GridColumn>
                        <GridColumn Field="Field10" HeaderText="oRebounds" Width="150"></GridColumn>
                        <GridColumn Field="Field11" HeaderText="dRebounds" Width="150"></GridColumn>
                        <GridColumn Field="Field12" HeaderText="Rebounds" Width="150"></GridColumn>
                        <GridColumn Field="Field13" HeaderText="Assists" Width="150"></GridColumn>
                        <GridColumn Field="Field14" HeaderText="Steals" Width="150"></GridColumn>
                        <GridColumn Field="Field15" HeaderText="Blocks" Width="150"></GridColumn>
                        <GridColumn Field="Field16" HeaderText="TurnOvers" Width="150"></GridColumn>
                        <GridColumn Field="Field17" HeaderText="PF" Width="150"></GridColumn>
                        <GridColumn Field="Field18" HeaderText="fgAttempted" Width="150"></GridColumn>
                        <GridColumn Field="Field19" HeaderText="fgMade" Width="150"></GridColumn>
                        <GridColumn Field="Field20" HeaderText="ftAttempted" Width="150"></GridColumn>
                    </GridColumns>
                </EjsGrid>

            </div>
        </div>
    </div>

 @functions{

     public List<VirtualData> GridData { get; set; }

     protected override void OnInitialized()
     {
         GridData = VirtualData.GetAllRecords();
     }
}