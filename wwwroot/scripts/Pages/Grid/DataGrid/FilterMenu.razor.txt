@page "/Grid/FilterMenu"

@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Filter Menu";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
			This sample demonstrates the way of filtering Grid columns using menu, checkbox and excel filter UI. In this sample, click the filtering
        icon from column header to show filter UI for a particular column. You can change the filter type from the properties
        panel.
		</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>The filtering feature enables the user to view the reduced amount of records based on filter criteria. It can be enabled
        by setting <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#allowfitering-boolean'>allowFiltering
        </a></code> property as true. </p>
    <p>Grid supports the following filter types. They are </p>
    <ul>
        <li><code>FilterBar</code></li>
        <li><code>Menu</code></li>
        <li><code>CheckBox</code></li>
        <li><code>Excel</code></li>
    </ul>
    you can change the filter type by setting <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/ grid/api-filterSettings.html?lang=typescript#type-string'>filterSettings->type</a></code>
    <p> In this demo, filter menu enabled by default , you can switch to other filter type by using dropdown. </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid ID="Grid" DataSource="@gridData" AllowFiltering="true" AllowPaging="true">
                <GridFilterSettings Type="@Syncfusion.EJ2.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="@TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" TextAlign="@TextAlign.Right" Width="120" Format="C2"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 105px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Filter Type</td>
            <td>
                <EjsDropDownList ID="types" Index="0" PopupWidth="110px" DataSource="@types" Change="@onchange">
                    <DropDownListFieldSettings text="id" value="type"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@functions{

    public List<OrdersDetails> gridData { get; set; }

    public class FilterType
    {
        public string id { get; set; }

        public string type { get; set; }
    }

    List<FilterType> types = new List<FilterType>()
    {
        new FilterType(){ id= "Menu", type= "Menu" },
        new FilterType(){ id= "Excel", type= "Excel" },
    };

    public void onchange(object args)
    {
        //Fix by core team.
    }

    protected override void OnInit()
    {
        gridData = OrdersDetails.GetAllRecords();
    }
}
