@page "/Grid/RemoteData"

@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Remote Data";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the way of data binding Grid component with remote service. The Grid data source is bound to
        remote data using DataManager.</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>The Grid supports data binding. The <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#datasource-object---datamanager'>
        dataSource
        </a></code> property can be assigned with the instance of <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/data/api-dataManager.html'>
        DataManager</a></code> to bind remote data.</p>

        <p>The DataManager, which will act as an interface between the service endpoint and the Grid, will require the below
            minimal information to interact with service endpoint properly.
        </p>
        <ul>
            <li><code>DataManager->url</code> - Defines the service endpoint to fetch data</li>
            <li><code>DataManager->adaptor</code> - Defines the adaptor option. By default, <code>ODataAdaptor</code> is used
                for remote binding.</li>
        </ul>
        <p>Adaptor is responsible for processing response and request from/to the service endpoint.
            <code>@syncfusion/ej2-data</code> package provides some predefined adaptors which are designed to interact with
            particular service endpoints. They are,</p>
        <ul>
            <li><code>UrlAdaptor</code> - Use this to interact any remote services. This is the base adaptor for all remote based
                adaptors.</li>
            <li><code>ODataAdaptor</code> - Use this to interact with OData endpoints.</li>
            <li><code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.</li>
            <li><code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.</li>
            <li><code>WebMethodAdaptor</code> - Use this to interact with web methods.</li>
        </ul>
        <p>In this demo, remote data is bound by assigning service data as an instance of <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/data/api-dataManager.html'>
        DataManager</a></code> to the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#datasource-object---datamanager'>
        dataSource
        </a></code> property.</p>
        <p>
            More information on the data binding can be found in this
            <a target='_blank' href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#datasource-object---datamanager'>
        documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsGrid  TValue="OrdersDetails" AllowPaging="true">
                <EjsDataManager Url="https://ej2services.syncfusion.com/production/web-services/api/Orders" Adaptor="Adaptors.WebApiAdaptor" CrossDomain="true"></EjsDataManager>
                <GridPageSettings PageCount="3"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.OrderDate) HeaderText="Order Date" Format="yMd" Type="date" TextAlign="TextAlign.Right"  Width="130"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right"  Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@code{

    public List<OrdersDetails> GridData { get; set; }

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }
}
