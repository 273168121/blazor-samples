@page "/Grid/DialogEditing"

@using Syncfusion.EJ2.Blazor.Grids

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Dialog Editing";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates CRUD operations in Grid. You can perform CRUD operations as follows,</p>
        <ul>
            <li><code>Add</code> -  To add new record, click Add toolbar button </li>
            <li><code>Edit</code> - To edit record, double click a row or click toolbar Edit button after selected a row </li>
            <li><code>Delete</code> - To delete record, click toolbar Delete button after selected a row </li>
            <li><code>Update</code>,<code>Cancel</code> - You can save or discard changes by click toolbar Update and Cancel button respectively</li>
        </ul>."
    };
    SampleBrowser.Description = new string[]{
        @"<p> The Grid supports CRUD operations. This CRUD operations can be configured in Grid using
        <code>editSettings</code>. Also, it has different modes to manipulate the datasource.
    </p>
    <p>The available modes are,</p>
    <ul>
        <li><code>Inline</code></li>
        <li><code>Dialog</code></li>
        <li><code>Batch</code></li>
    </ul>
    <p>
        In this demo, Dialog mode is enabled for editing by defining <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-editSettings.html#mode-string'>
        editSettings.mode
        </a></code> as <code>dialog</code>. You can start editing by double clicking a row or clicking on toolbar's <code>Edit</code>
        button, then the currently selected row will be shown on a dialog and you can change the row values and save edited data to the datasource.
    </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid DataSource="@GridData" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" AllowPaging="true">
                <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="EditMode.Dialog"></GridEditSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" IsPrimaryKey="true" ValidationRules="@(new { required=true, number=true})" TextAlign="TextAlign.Right"  Width="140"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer Name" ValidationRules="@(new { required=true})" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" ValidationRules="@(new { required=true})" EditType="numericedit" Format="C2" TextAlign="TextAlign.Right"  Width="140"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.OrderDate) HeaderText="Order Date" EditType="datepickeredit" Format="yMd" Type="date" TextAlign="TextAlign.Right"  Width="160"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" EditType="dropdownedit" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Verified) HeaderText="Verified" EditType="booleanedit" DisplayAsCheckbox=@true Width="150" TextAlign="TextAlign.Center" ></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@code{

    public List<OrdersDetails> GridData { get; set; }

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }
}
