@page "/Grid/GroupAndCaptionAggregate"

@using Syncfusion.EJ2.Blazor.Grids

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_categorydata
@{
    SampleBrowser.CurrentSampleName = "Group And Caption Aggregate";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates Aggregate functionality of the Grid. In this sample, both Unit In Stock column are displayed their aggregate value in group footer.
            Unit In Stock column displayed its aggregate value in group caption also.</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>The Grid supports aggregates which will be displayed at the footer, group footer and group caption of the Grid.
    The aggregate configurations can be provided by the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html'>
        aggregates
        </a></code> property.</p>
    <p>The built-in aggregates are,</p>
     <ul>
        <li><code>Sum</code></li>     
        <li><code>Average</code></li>     
        <li><code>Min</code></li>     
        <li><code>Max</code></li>     
        <li><code>Count</code></li>     
        <li><code>TrueCount</code></li>     
        <li><code>FalseCount</code></li>     
        <li><code>Custom</code> - Requires the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#customaggregate-string'>
        customAggregate
        </a></code> property to perform the aggregation.
        The custom aggregate value can be accessed inside template using the key <code>${custom}</code></li>     
    </ul>    
    <p>
        In this demo, the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#groupfootertemplate-string'>
        groupFooterTemplate</a></code> property is used to display the group footer aggregation for the <strong><i>Unit In Stocks</i></strong> and <strong><i>Discontinued</i></strong> columns and <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#groupcaptiontemplate-string'>
        groupCaptionTemplate</a></code> property is used to display the group caption aggregation for the <strong><i>Unit In Stocks</i></strong> column.
    </p>    
    <p>    To enable group footer aggregation for <strong><i>Unit In Stocks</i></strong> column, the <code>Sum</code> aggregate type is used by setting the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#type-string---string'>
        type</a></code> and <code><a target='_blank' class='code'
 href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#field-string'>
        field</a></code> property is set as <strong><i>UnitsInStock</i></strong> which will be used to perform the aggregation.
        The aggregate value is accessed inside the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#groupfootertemplate-string'>
        groupFooterTemplate</a></code> using its <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#type-string---string'>
        type</a></code> name (<code>${Sum}</code>).
    </p>
    <p>    To enable group caption aggregation for <strong><i>Unit In Stocks</i></strong> column, the <code>max</code> aggregate type is used by setting the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#type-string---string'>
        type</a></code> and the <code><a target='_blank' class='code'
 href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#field-string'>
        field</a></code> property is set as <strong><i>UnitsInStock</i></strong> which will be used to perform the aggregation.
        The aggregate value is accessed inside the<code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#groupcaptiontemplate-string'>
        groupCaptionTemplate</a></code> using its <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#type-string---string'>
        type</a></code> name (<code>${max}</code>).
    </p>"   
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid id="Grid" DataSource="@gridData" AllowPaging="true" AllowGrouping="true">
                <GridGroupSettings ShowDropArea="false" Columns="@(new string[] { "CategoryName" })"></GridGroupSettings>
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(Category.CategoryName) HeaderText="Category Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(Category.ProductName) HeaderText="Product Name" Width="170"></GridColumn>
                    <GridColumn Field=@nameof(Category.QuantityPerUnit) HeaderText="Quantity Per Unit" TextAlign="@TextAlign.Right" Width="170"></GridColumn>
                    <GridColumn Field=@nameof(Category.UnitsInStock) HeaderText="Units In Stock" Width="170"></GridColumn>
                    <GridColumn Field=@nameof(Category.Discontinued) HeaderText="Discontinued" Width="150" DisplayAsCheckbox="true" Type="boolean" TextAlign="@TextAlign.Center"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@code{

    public List<Category> gridData { get; set; }

    protected override void OnInit()
    {
        gridData = Category.GetAllRecords();
    }
}
