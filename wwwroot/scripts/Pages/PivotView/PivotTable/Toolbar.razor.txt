@page "/PivotView/Toolbar"

@using Syncfusion.EJ2.Blazor.PivotView

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Toolbar";
    SampleBrowser.CurrentControlName = "PivotTable";
    SampleBrowser.CurrentControlCategory = "PivotTable";
    SampleBrowser.CurrentControl = SampleBrowser.Config.PivotTable;
    SampleBrowser.ActionDescription = new string[] {
@"<p>
    This sample demonstrates the toolbar options of the pivot table. The options include report manipulations like
        create, save, save as, rename and delete, show or hide subtotals and grand totals, conditional formatting, and
        exporting in the pivot table and pivot chart.
</p>"
};
    SampleBrowser.Description = new string[] {
@"<p>
    In this example, users can generate a report at runtime, as well as save and load them. Save and load operations
        are performed in localStorage (session storage) using the <b>saveReport</b> and <b>loadReport</b> events. Users can change to
        either pivot table or pivot chart using the toolbar options. Other toolbar options available are:
</p>
 <table>
        <tr>
            <td style='vertical-align: top;padding: 10px 0;width:230px'>
                <code>Create new report:</code>
            </td>
            <td>Allows user to create new reports at runtime.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Rename report:</code>
            </td>
            <td>Allows user to change current report name dynamically through UI.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Remove report:</code>
            </td>
            <td>Allows user to remove current report from the report collection at runtime.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Save as option:</code>
            </td>
            <td>Allows user to save report locally in browser memory.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Report list:</code>
            </td>
            <td>Allows user to swap between the reports within the report collection.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Pivot Table:</code>
            </td>
            <td>Allows user to view data in cross-tabulation format.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Pivot Chart and its types:</code>
            </td>
            <td>Allows user to view data in graphical format. The chart types include column, bar, line, area, etc.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Export:</code>
            </td>
            <td>Provides options to save data in PDF, Excel, and CSV document types.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Hide subtotals and grand totals:</code>
            </td>
            <td>Allows user to hide grand totals and subtotals (based on fields) in row and column.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Conditional formatting:</code>
            </td>
            <td>Allows user to customize cells base on certain conditions.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Field List:</code>
            </td>
            <td>Provides option to alter the report dynamically through UI.</td>
        </tr>
    </table>
"
};
}
@*End:Hidden*@
@{ var toolbar = new string[]{"New", "Save", "SaveAs", "Rename", "Remove", "Load",
    "Grid", "Chart", "Export", "SubTotal", "GrandTotal", "ConditionalFormatting", "FieldList" };}

<div class="control-section">
    <div class="content-wrapper">
        <EjsPivotView ID="pivotview" Width="100%" Height="400" ShowFieldList=true ShowToolbar=true Toolbar="@toolbar" AllowConditionalFormatting=true AllowPdfExport=true AllowExcelExport=true>
            <PivotViewDisplayOption Primary=Primary.Table View=View.Both></PivotViewDisplayOption>
			<PivotViewDataSourceSettings DataSource="@data" ExpandAll=false EnableSorting=true ShowGrandTotals=false ShowSubTotals=false>
                <PivotViewColumns>
                    <PivotViewColumn Name="Year"></PivotViewColumn>
                    <PivotViewColumn Name="Quarter"></PivotViewColumn>
                </PivotViewColumns>
                <PivotViewRows>
                    <PivotViewRow Name="Country"></PivotViewRow>
                    <PivotViewRow Name="Products"></PivotViewRow>
                </PivotViewRows>
                <PivotViewValues>
                    <PivotViewValue Name="Sold" Caption="Units Sold"></PivotViewValue>
                    <PivotViewValue Name="Amount" Caption="Sold Amount"></PivotViewValue>
                </PivotViewValues>
                <PivotViewFilters>
                    <PivotViewFilter Name="Product_Categories" Caption="Product Categories"></PivotViewFilter>
                </PivotViewFilters>
                <PivotViewFormatSettings>
                    <PivotViewFormatSetting Name="Amount" Format="C" UseGrouping=true></PivotViewFormatSetting>
                </PivotViewFormatSettings>
            </PivotViewDataSourceSettings>
            <PivotViewGridSettings ColumnWidth="140"></PivotViewGridSettings>
        </EjsPivotView>
    </div>
</div>

<style>
    #pivotview {
        width: 100%;
        height: 100%;
    }
    .e-pivotview {
        min-height: 200px;
    }
</style>

@code{

    EjsPivotView pivotView;

    static PivotViewData pivotData = new PivotViewData();

    private List<PivotViewData.Pivot_Data> data = pivotData.GetPivot_Data();
   
}