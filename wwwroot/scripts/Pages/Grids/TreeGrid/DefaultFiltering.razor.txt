@page "/TreeGrid/DefaultFiltering"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.DropDowns


@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_treedata
@{
    SampleBrowser.CurrentSampleName = "Filtering";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the default filterbar in TreeGrid.
            In this sample, type the value in the filterbar and press enter to filter particular column. The filtering is based on hierarchy mode.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            The filtering feature enables the user to view the reduced amount of records based on filter criteria. It can be enabled
            by setting <code>
                allowFiltering
            </code> property as true. A filter bar row will be rendered next to header which allows the end-users to filter
            data by entering text within its cells.
        </p>
        <p>Filterbar uses two modes which specifies how to start filtering. They are,</p>
        <ul>
            <li><code>OnEnter</code> - Enabled by default, filter will be initiated after pressing <code>Enter</code> key.</li>
            <li>
                <code>Immediate</code> - Filter will start after user ends typing. This uses a time delay of <i>1500ms</i> to initiate
                filter after use stops typing. It can be overridden using the <code>
                    filterSettings->immediateModeDelay
                </code> property.
            </li>
        </ul>
        <p>TreeGrid provides support for a set of filtering modes with <code>hierarchyMode</code> property. The below are the type of filter mode available in TreeGrid. </p>
        <ul>
            <li>
                <code>Parent</code> - This is the default filter hierarchy mode in TreeGrid.
                The filtered records are displayed with its parent records, if the filtered records not have any parent record then the filtered record only displayed.
            </li>
            <li><code>Child</code> - The filtered records are displayed with its child record, if the filtered records do not have any child record then only the filtered records are displayed.</li>
            <li>
                <code>Both</code> - The filtered records are displayed with its both parent and child record.
                If the filtered records do not have any parent and child record then only the filtered records are displayed.
            </li>
            <li><code>None</code> - Only the filtered records are displayed.</li>
        </ul>
        <p>In this demo, you can type the value in the filterbar and press enter to filter particular column or select the value from filterbar template of Duration column.</p>
        <br>

        <p>
            More information on the data binding can be found in this documentation section.
        </p>"
    };
}
@*End:Hidden*@


<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsTreeGrid ID="TreeGrid" AllowFiltering="true" AllowPaging="true" ChildMapping="Children" TreeColumnIndex="1">
                <EjsDataManager Json="@treedata" Adaptor="Adaptors.JsonAdaptor"></EjsDataManager>
                <TreeGridPageSettings PageSize="10"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskId" HeaderText="Task ID" Width="100" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="160"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="100" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="100" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="100"></TreeGridColumn>
                    <TreeGridColumn Field="Approved" HeaderText="Approved" Width="100" DisplayAsCheckBox="true"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>
        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:28px;">Properties</h4>

    <table id="property" style="width: 73%; height: 58px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Hierarchy Mode</td>
            <td>
                <EjsDropDownList ID="modes" Index="0" PopupWidth="110px" DataSource="@lines" Change="@onchange">
                    <DropDownListFieldSettings text="id" value="mode"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@functions{

    EjsTreeGrid treeGrid;

    public class Modes
    {
        public string id { get; set; }

        public string mode { get; set; }
    }

    List<Modes> lines = new List<Modes>()
    {
        new Modes(){ id= "Parent", mode= "Parent" },
        new Modes(){ id= "Child", mode= "Child" },
        new Modes(){ id= "Both", mode= "Both" },
        new Modes(){ id= "None", mode= "None" },
    };

    public void onchange(object args)
    {
        //Fix by core team.
    }

    public TreeData.BusinessObject[] treedata { get; set; }

    protected override void OnInit()
    {
        this.treedata = TreeData.GetDefaultData().Cast<TreeData.BusinessObject>().ToArray();
    }
}
