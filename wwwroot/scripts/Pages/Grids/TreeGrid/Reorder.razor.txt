@page "/TreeGrid/Reorder"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor


@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_treedata

@{
    SampleBrowser.CurrentSampleName = "Reorder";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates reordering feature of the TreeGrid columns. Select column name and index from properties panel to reorder the columns.
       You can also reorder columns by simply drag and drop in the desired column position.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            Reordering can be enabled by setting <code>allowReordering</code> property as true.
       Reordering can be done by drag and drop the column header from one index to another index within the TreeGrid.
        </p>
        <p>The location in which the column to be placed, will be indicated by two arrows symbols.</p>
        <p>In this demo, you can either reorder columns by drag and drop or by selecting column name and column index from the dropdown to reorder the columns.
        </p>
        <br>
        <p>
            More information on the TreeGrid instantiation can be found in this documentation section.
        </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsTreeGrid ID="TreeGrid" DataSource="@treedata" IdMapping="TaskID" ParentIdMapping="ParentID" TreeColumnIndex="1" AllowPaging="true" AllowReordering="true">
                <TreeGridPageSettings PageSize="1"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="60" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="100"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText=" Start Date" Format="yMd" Type="date" Width="90" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="EndDate" HeaderText="End Date" Format="yMd" Type="date" Width="100" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="80" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="80"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>

        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 105px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Column</td>
            <td>
                <EjsDropDownList ID="games" Index="2" PopupWidth="110px" DataSource="@names" Change="@onchange">
                    <DropDownListFieldSettings text="id" value="name"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>

        <tr>
            <td class="left-side" style="padding-right:15px;">Column Index</td>
            <td>
                <EjsDropDownList ID="indexes" Index="2" PopupWidth="110px" DataSource="@indexes" Change="@indexchange">
                    <DropDownListFieldSettings text="id" value="name"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@functions{

    EjsTreeGrid treeGrid;

    public class Names
    {
        public string id { get; set; }

        public string name { get; set; }
    }

    public class ColumnIndex
    {
        public string id { get; set; }

        public string name { get; set; }
    }

    List<Names> names = new List<Names>()
{
        new Names(){ id= "TaskID", name= "Task ID" },
        new Names(){ id= "TaskName", name= "Task Name" },
        new Names(){ id= "StartDate", name= "Start Date" },
        new Names(){ id= "Duration", name= "Duration" },
        new Names(){ id= "Progress", name= "Progress" },
    };

    List<ColumnIndex> indexes = new List<ColumnIndex>()
{
        new ColumnIndex(){ id= "0", name= "1" },
        new ColumnIndex(){ id= "1", name= "2" },
        new ColumnIndex(){ id= "2", name= "3" },
        new ColumnIndex(){ id= "3", name= "4" },
        new ColumnIndex(){ id= "4", name= "5" },
    };

    public void onchange(object args)
    {
        //Fix by core team.
    }

    public void indexchange(object args)
    {
        //Fix by core team.
    }

    public List<SelfReferenceData> treedata { get; set; }

    protected override void OnInit()
    {
        this.treedata = SelfReferenceData.GetTree().ToList();
    }
}
