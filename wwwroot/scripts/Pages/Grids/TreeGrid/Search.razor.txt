@page "/TreeGrid/Search"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.DropDowns


@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_treedata
@{
    SampleBrowser.CurrentSampleName = "Search";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the TreeGrid searching feature. In this sample, use the search box from toolbar to search TreeGrid records.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @" <p>The TreeGrid has an option to search its content using the search method with search key as the parameter.</p>

    <p>The tree grid supports different types of search mode through the <code>searchSettings.hierarchyMode property</code>.</p>

    <p>The following are the types of search modes available in the tree grid.</p>

    <ul>
        <li><code>Parent</code> - This is the default search hierarchy mode in the tree grid. It displays a searched record with its parent records. 
            If the searched records do not have any parent record, it displays only the searched record.</li>

        <li><code>Child</code> - Displays the searched record with its child record. 
            If the searched records do not have any child record, it displays only the searched record.</li>

        <li><code>Both</code> - Displays the searched record with both its parent and child records. 
            If the searched records do not have any parent and child records, it displays only the searched record.</li>
            
        <li><code>None</code> - Displays only the searched record.</li>
    </ul>

    <p>In this demo, The TreeGrid toolbar provides an option to search the TreeGrid's records. The user can type the text box in the toolbar and click search button or press Enter key to perform search operation. 
        And also we have an option to change the searching hierarchy mode through property panel.</p>


        <p>
            More information on the data binding can be found in this documentation section.
        </p>"
    };
}
@*End:Hidden*@


<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsTreeGrid TValue="TreeData.BusinessObject" AllowPaging="true" ChildMapping="Children" TreeColumnIndex="1" Toolbar="@(new List<string>() { "Search" })">
                <EjsDataManager Json="@treeData" Adaptor="Adaptors.JsonAdaptor"></EjsDataManager>
                <TreeGridPageSettings PageSize="10"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskId" HeaderText="Task ID" Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="220"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="100"></TreeGridColumn>
                    <TreeGridColumn Field="Approved" HeaderText="Approved" Width="100" DisplayAsCheckBox="true"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>
        </div>
    </div>
</div>

@code{

    public TreeData.BusinessObject[] treeData { get; set; }

    protected override void OnInitialized()
    {
        this.treeData = TreeData.GetDefaultData().Cast<TreeData.BusinessObject>().ToArray();
    }
}
