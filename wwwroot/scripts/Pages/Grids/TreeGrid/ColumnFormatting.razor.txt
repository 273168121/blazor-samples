@page "/TreeGrid/ColumnFormatting"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_formatdata

@{
    SampleBrowser.CurrentSampleName = "Column Formatting";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the way of displaying the content of TreeGrid columns based on the specified format. In this sample, format of columns can be changed dynamically through property panel.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>Format is the process of customizing the particular column data/values based on specific culture. The TreeGrid uses Internalization library to format number and date values. 
            The format can be specified by using <code>
            format</code> property of columns.</p>
            <p>In this demo, select the column and format from the property panel to format the corresponding column values.</p>
            <p>
                More information about Column Formatting can be found in this documentation section.
            </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            @*<EjsTreeGrid ID="treegrid" ref="treeGrid" ChildMapping="Children" TreeColumnIndex="1" DataSource="@treedata" Columns="@treecolumns" AllowPaging="true" EnableHierarchySelection="true"></EjsTreeGrid>*@

            <EjsTreeGrid ID="TreeGrid" height="380" ChildMapping="subTasks" AllowPaging="true" TreeColumnIndex="1">
                <EjsDataManager Json="@treedata" Adaptor="Adaptors.JsonAdaptor"></EjsDataManager>
                <TreeGridColumns>
                    <TreeGridColumn Field="orderID" HeaderText="Order ID" Width="90" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="orderName" HeaderText="Order Name" Width="135"></TreeGridColumn>
                    <TreeGridColumn Field="orderDate" HeaderText=" Order Date" Format="yMd" Type="date" Width="160" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="price" HeaderText="Price" Width="110" Format="C2" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="unitPrice" HeaderText="Unit Price" Width="90" Format="C2" TextAlign="@TextAlign.Right"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>

        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 105px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Column</td>
            <td>
                <EjsDropDownList ID="columns" Index="0" PopupWidth="110px" DataSource="@names" Change="@onchange">
                    <DropDownListFieldSettings text="id" value="name"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>

        <tr>
            <td class="left-side" style="padding-right:15px;">Column Index</td>
            <td>
                <EjsDropDownList ID="format" Index="2" PopupWidth="110px" DataSource="@priceFormat" Change="@indexchange">
                    <DropDownListFieldSettings text="id" value="format"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@functions{

    EjsTreeGrid treeGrid;

    public class Names
    {
        public string id { get; set; }

        public string name { get; set; }
    }

    public class PriceFormat
    {
        public string id { get; set; }

        public string format { get; set; }
    }

    public class DateFormat
    {
        public string id { get; set; }

        public string format { get; set; }
    }

    List<Names> names = new List<Names>()
    {
        new Names(){ id= "price", name= "Price" },
        new Names(){ id= "orderDate", name= "Order Date" },
    };

    List<PriceFormat> priceFormat = new List<PriceFormat>()
    {
        new PriceFormat(){ id= "n2", format= "n2" },
        new PriceFormat(){ id= "n3", format= "n3" },
        new PriceFormat(){ id= "c2", format= "c2" },
        new PriceFormat(){ id= "c3", format= "c3" },
        new PriceFormat(){ id= "p2", format= "p2" },
        new PriceFormat(){ id= "p3", format= "p3" },
    };

    List<DateFormat> dateFormat = new List<DateFormat>()
    {
        new DateFormat(){ id= "M/d/yyyy", format= "Short Date" },
        new DateFormat(){ id= "dddd, MMMM dd, yyyy", format= "Long Date" },
        new DateFormat(){ id= "MMMM, yyyy", format= "Month/Year" },
        new DateFormat(){ id= "MMMM, dd", format= "Month/Day" },
    };

    public void onchange(object args)
    {
        //Fix by core team.
    }

    public void indexchange(object args)
    {
        //Fix by core team.
    }

    public TreeDataFormat[] treedata { get; set; }

    protected override void OnInit()
    {
        this.treedata = TreeDataFormat.GetDataFormat().Cast<TreeDataFormat>().ToArray();
    }
}
