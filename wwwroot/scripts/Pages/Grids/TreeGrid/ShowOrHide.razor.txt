@page "/TreeGrid/ShowOrHide"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_selfdata

@{
    SampleBrowser.CurrentSampleName = "Show Or Hide Column";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates dynamic show/hide columns feature of TreeGrid.
       Select column name from the properties panel and click hide/show to toggle visibility.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>The TreeGrid column can be showed/hidden dynamically using <code>showColumns
        </code> and <code>hideColumns</code> method of the Grid.</p>
    <p>In this demo, the columns can be showed and hidden by selecting the column name in the dropdown
        and click the Show or Hide buttons to toggle visibility. And the column`s visibility is toggled based on the
        <code>columns->headerText</code> value.</p>
    <br/>
    <p>The <code>columns->visible</code> property specifies the visibility of a column.
    To hide a column at the initial rendering, set the <code>columns->visible</code> property to false.</p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsTreeGrid DataSource="@treeData" IdMapping="TaskID" ParentIdMapping="ParentID" TreeColumnIndex="1" AllowPaging="true">
                <TreeGridPageSettings PageSize="1"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="60" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="120"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText=" Start Date" Format="yMd" Type="date" Width="90" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="EndDate" HeaderText="End Date" Format="yMd" Type="date" Width="90" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="80" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="80"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>
        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 180px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Column</td>
            <td>
                <EjsDropDownList ID="columns" Index="0" PopupWidth="110px" DataSource="@names" Change="@OnChange">
                    <DropDownListFieldSettings text="id" value="name"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>

        <tr>
            <td>
                <EjsButton id="hide" IsPrimary="true">Hide</EjsButton>
            </td>
            <td style="padding-left:18px;">
                <EjsButton id="show" IsPrimary="true" Disabled="true">Show</EjsButton>
            </td>
        </tr>

        <tr>
            <td class="left-side" style="padding-right:15px;">Hidden Columns</td>
            <td>
                <textarea id="hiddencolumns" style="resize: none;height:65px;background-color: #fff; padding: 6px"
                         class="form-control" readonly="readonly"></textarea>
            </td>
        </tr>
    </table>
</div>*@

@code{

    public class Names
    {
        public string id { get; set; }

        public string name { get; set; }
    }

    List<Names> names = new List<Names>()
{
        new Names(){ id= "TaskID", name= "Task ID" },
        new Names(){ id= "TaskName", name= "Task Name" },
        new Names(){ id= "StartDate", name= "Start Date" },
        new Names(){ id= "Duration", name= "Duration" },
        new Names(){ id= "Progress", name= "Progress" },
    };

    public void OnChange(object args)
    {
        
    }

    public List<SelfReferenceData> treeData { get; set; }

    protected override void OnInitialized()
    {
        this.treeData = SelfReferenceData.GetTree().ToList();
    }
}
