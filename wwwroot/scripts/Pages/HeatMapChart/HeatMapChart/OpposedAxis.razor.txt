@page "/HeatMapChart/OpposedAxis"

@using Syncfusion.EJ2.Blazor.HeatMap
@using Syncfusion.EJ2.Blazor.Buttons;

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_heatmapdata
@{
    SampleBrowser.CurrentSampleName = "Opposed Axis";
    SampleBrowser.CurrentControlName = "HeatMapChart";
    SampleBrowser.CurrentControlCategory = "HeatMapChart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.HeatMapChart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample illustrates the monthly flight arrivals at JFK international airport, New York. The data label is disabled in this sample, the tooltip displays the data point values. In property panel, the options are available to change the position of the axes by means of checkbox for each axis.
     </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
         In this example, you can see how to change the display position of the axis. You can change the display position of axes by enabling the <code>opposedPosition</code> property for each axis.

         Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>"
    };
}
@*End:Hidden*@
<div class="row">
    <div>
        <Ejsheatmap DataSource="@heatmapData">
            <HeatMapTitle Text="Monthly Flight Traffic at JFK Airport" TextStyle="@TextStyle"></HeatMapTitle>
            <HeatMapXAxis Labels="@xLabels" LabelRotation="45" LabelIntersectAction="@Syncfusion.EJ2.Blazor.HeatMap.LabelIntersectAction.None" OpposedPosition="true"></HeatMapXAxis>
            <HeatMapYAxis Labels="@yLabels" OpposedPosition="true"></HeatMapYAxis>
            <HeatMapCellSettings ShowLabel="false" Border="@Border" Format="{value} flights"></HeatMapCellSettings>
            <HeatMapLegendSettings Visible="false"></HeatMapLegendSettings>
        </Ejsheatmap>
    </div>
</div>
@code{

    private string[] xLabels = new string[] { "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" };

    private string[] yLabels =  new string[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sept", "Oct", "Nov", "Dec" };

    public FontModel TextStyle = new FontModel() { Size = "15px", FontWeight = "500", FontStyle = "Normal" };

    public BorderModel Border = new BorderModel() { Width = 0 };

    public object heatmapData = HeatMapData.GetOpposedData();
    }
