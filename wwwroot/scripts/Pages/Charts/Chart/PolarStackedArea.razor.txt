@page "/Charts/PolarStackedArea"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Stacked Area";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample illustrates trackball feature in chart. To show trackball, hover or long press the chart and you can see the point value near to the mouse point.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            This sample demonstrates the trackball behavior in chart. Trackball is used to track a data point closer to the current mouse position or touch contact point.
            You can show tooltip for individual point or group of points closer to mouse position using <code>shared</code> properties in tooltip.
        </p>
        <p>
            Hover the chart area to view trackball and its tooltip. Touch and hold to enable trackball in touch enabled devices.
        </p>
        <br></br>
        <p><b>Injecting Module</b></p>
        <p>
            Chart component features are segregated into individual feature-wise modules. To use Trackball, we need to inject
            <code>Tooltip</code> module into <code>services</code>.
        </p>
        <p>
            More information on the Tooltip and Trackball can be found in this &nbsp;
            <a target=""_blank"" href=""http://ej2.syncfusion.com/react/documentation/chart/api-tooltipSettingsModel.html"">documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@
<div class="control-section">
    <EjsChart id="container" title="GDP, Current Prices (in Billions)">
        <ChartTooltipsettings enable="true">
        </ChartTooltipsettings>
        <ChartLegendSettings Visible="true">
        </ChartLegendSettings>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" LabelPlacement="LabelPlacement.OnTicks" Interval="1" Coefficient="100"></ChartPrimaryXAxis>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@dataSource" name="2013" xName="x" width="2" yName="y" type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries dataSource="@dataSource" name="2014" xName="x" width="2" yName="y1" type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries dataSource="@dataSource" name="2015" xName="x" width="2" yName="y2" type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries dataSource="@dataSource" name="2016" xName="x" width="2" yName="y3" type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{
    public class PolarStackedAreaData
    {
        public string x;
        public double y;
        public double y1;
        public double y2;
        public double y3;
    }
   List<PolarStackedAreaData> dataSource = new List<PolarStackedAreaData>
    {
            new PolarStackedAreaData { x = "JPN", y= 5156, y1= 4849, y2= 4382, y3= 4939 },
            new PolarStackedAreaData { x= "DEU", y= 3754, y1= 3885, y2= 3365, y3= 3467 },
            new PolarStackedAreaData { x = "FRA", y = 2809, y1= 2844, y2= 2420, y3= 2463 },
            new PolarStackedAreaData { x = "GBR", y= 2721, y1= 3002, y2= 2863, y3= 2629 },
            new PolarStackedAreaData { x = "BRA", y= 2472, y1= 2456, y2= 1801, y3= 1799 },
            new PolarStackedAreaData { x = "RUS", y= 2231, y1= 2064, y2= 1366, y3= 1281 },
            new PolarStackedAreaData { x = "ITA", y= 2131, y1= 2155, y2= 1826, y3= 1851 },
            new PolarStackedAreaData { x = "IND", y= 1857, y1= 2034, y2= 2088, y3= 2256 },
            new PolarStackedAreaData { x = "CAN", y= 1843, y1= 1793, y2= 1553, y3= 1529 }
    };
}