@page "/Charts/DateTimeCategoryAxis"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "DateTime Category Axis";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
       This sample illustrates sales of a product in business days.
            Data points in this sample are enhanced with tooltip.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this sample, you can see how to render and configure the date time category axis.
            Date time category axis is used to represent only business days in datetime axis.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the date time category can be found in this &nbsp;
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart id="datetimeaxis" title="Sales comparison of a Product">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis title="Business Days" IntervalType="IntervalType.Days" Skeleton="Ed" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.DateTimeCategory" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartPrimaryXAxisMajorGridLines Width="0"></ChartPrimaryXAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="0" maximum="100" interval="20" labelFormat="{value}M" RangePadding="ChartRangePadding.None">
            <ChartPrimaryYAxisLineStyle Width="0"></ChartPrimaryYAxisLineStyle>
            <ChartPrimaryYAxisMajorTickLines Width="0"></ChartPrimaryYAxisMajorTickLines>
            <ChartPrimaryYAxisMinorTickLines Width="0"></ChartPrimaryYAxisMinorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@chartData" xName="xValue" yName="yValue1" Opacity="1" name="Warmest" width=2 type="ChartSeriesType.Column">
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartAnnotations>
            <ChartAnnotation X="2017-11-22" Y="90" Content="<div style='color:#FF0000;font-family: bold; font-weight: 600'>Christmas Offer<br> Dec 2017</div>" CoordinateUnits="Units.Point"></ChartAnnotation>
            <ChartAnnotation X="2018-01-04" Y="90" Content="<div style='color:#FF0000;font-family: bold; font-weight: 800'>New Year Offer<br> Jan 2018</div>" CoordinateUnits="Units.Point"></ChartAnnotation>
        </ChartAnnotations>
        <ChartLegendSettings Visible="false"></ChartLegendSettings>
    </EjsChart>
</div>

@code{
    public class DateTimeData
    {
        public DateTime xValue;
        public double yValue1;
    }
    //public DateTime xVal = new DateTime(2017, 11, 22);
    //public DateTime xVal1 = new DateTime(2018, 0, 4);
    List<ChartStripLines> striplines = new List<ChartStripLines>();
    ChartStripLine strip1 = new ChartStripLine
    {
        Start = new DateTime(2017, 11, 20),
        End = new DateTime(2017, 11, 27),
        Visible = true,
        Color = "skyblue",
        Opacity = 0.5
    };
    ChartStripLine strip2 = new ChartStripLine
    {
        Start =  new DateTime(2018, 0, 2),
        End = new DateTime(2018, 0, 8),
        Visible = true,
        Color = "pink",
        Opacity = 0.5
    };

    List<DateTimeData> chartData = new List<DateTimeData>
        {
                new DateTimeData { xValue = new DateTime(2017, 12, 20), yValue1 = 21},
                new DateTimeData { xValue = new DateTime(2017, 12, 21), yValue1 = 24 },
                new DateTimeData { xValue = new DateTime(2017, 12, 22), yValue1 = 24},
                new DateTimeData { xValue = new DateTime(2017, 12, 26), yValue1 = 70},
                new DateTimeData { xValue = new DateTime(2017, 12, 27), yValue1 = 75 },
                new DateTimeData { xValue = new DateTime(2018, 1, 2), yValue1 = 82 },
                new DateTimeData { xValue = new DateTime(2018, 1, 3), yValue1 = 53 },
                new DateTimeData { xValue = new DateTime(2018, 1, 4), yValue1 = 54 },
                new DateTimeData { xValue = new DateTime(2018, 1, 5), yValue1 = 53},
                new DateTimeData { xValue = new DateTime(2018, 1, 8), yValue1 = 45 },
            };
}
