@page "/Charts/StackedLine100"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "100% Stacked Line";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the family expense data with stacked line series in the chart to identify who spent more money in each category. Data points are enhanced with marker and tooltip.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the stacked line type charts. 100% Stacked Line type charts are used to represent time-dependent data, showing trends in data at equal intervals with stacked values of multiple series. You can use <code>dashArray</code>, <code>width</code>, <code>fill</code> properties to customize the line. <code>Marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the line series can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart id="stackedline100" title="Family Expense for Month" dataSource="@chartData">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" Interval="1">
            <ChartPrimaryXAxisMajorGridLines Width="0"></ChartPrimaryXAxisMajorGridLines>
            <ChartPrimaryXAxisMinorGridLines Width="0"></ChartPrimaryXAxisMinorGridLines>
            <ChartPrimaryXAxisMajorTickLines Width="0"></ChartPrimaryXAxisMajorTickLines>
            <ChartPrimaryXAxisMinorTickLines Width="0"></ChartPrimaryXAxisMinorTickLines>
            <ChartPrimaryXAxisLineStyle Width="0"></ChartPrimaryXAxisLineStyle>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Expense" Interval="20">
            <ChartPrimaryYAxisMajorGridLines Width="1"></ChartPrimaryYAxisMajorGridLines>
            <ChartPrimaryYAxisMinorGridLines Width="1"></ChartPrimaryYAxisMinorGridLines>
            <ChartPrimaryYAxisMajorTickLines Width="0"></ChartPrimaryYAxisMajorTickLines>
            <ChartPrimaryYAxisMinorTickLines Width="0"></ChartPrimaryYAxisMinorTickLines>
            <ChartPrimaryYAxisLineStyle Width="0"></ChartPrimaryYAxisLineStyle>
        </ChartPrimaryYAxis>
        <ChartTooltipsettings enable="true" format="${point.x} : <b>${point.y} (${point.percentage}%)</b>"></ChartTooltipsettings>
        <ChartSeriesCollection>
            <ChartSeries name="John" xName="x" width="2" dashArray="5,1"
                         opacity="1" yName="y" type="ChartSeriesType.StackingLine100">
                <ChartMarker Visible="true">
                </ChartMarker>
            </ChartSeries>
            <ChartSeries name="Peter" xName="x" width="2" dashArray="5,1"
                         opacity="1" yName="y1" type="ChartSeriesType.StackingLine100">
                <ChartMarker Visible="true">
                </ChartMarker>
            </ChartSeries>
            <ChartSeries name="Steve" xName="x" width="2" dashArray="5,1"
                         opacity="1" yName="y2" type="ChartSeriesType.StackingLine100">
                <ChartMarker Visible="true">
                </ChartMarker>
            </ChartSeries>
            <ChartSeries name="Charle" xName="x" width="2" dashArray="5,1"
                         opacity="1" yName="y3" type="ChartSeriesType.StackingLine100">
                <ChartMarker Visible="true">
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{

    public class StackedLineChartData
    {
        public string x;
        public double y;
        public double y1;
        public double y2;
        public double y3;
    }

      List<StackedLineChartData> chartData = new List<StackedLineChartData>
            {
                new StackedLineChartData { x = "Food" , y = 90, y1 = 40 , y2 = 70, y3 = 120},
                new StackedLineChartData { x = "Transport", y = 80, y1 = 90, y2 = 110, y3 = 70 },
                new StackedLineChartData { x = "Medical",y = 50, y1 = 80, y2 = 120, y3 = 50 },
                new StackedLineChartData { x = "Clothes",y = 70, y1 = 30, y2 = 60, y3 = 180 },
                new StackedLineChartData { x = "Personal Care", y = 30, y1 = 80, y2 = 80, y3 = 30 },
                new StackedLineChartData { x = "Books", y = 10, y1 = 40, y2 = 30, y3 = 270},
                new StackedLineChartData { x = "Fitness",y = 100, y1 = 30, y2 = 70, y3 = 40 },
                new StackedLineChartData { x = "Electricity", y = 55, y1 = 95, y2 = 55, y3 = 75},
                new StackedLineChartData { x = "Tax", y = 20, y1 = 50, y2 = 40, y3 = 65 },
                new StackedLineChartData { x = "Pet Care", y = 40, y1 = 20, y2 = 80, y3 = 95 },
                new StackedLineChartData { x = "Education", y = 45, y1 = 15, y2 = 45, y3 = 195 },
                new StackedLineChartData { x = "Entertainment", y = 75, y1 = 45, y2 = 65, y3 = 115 }
            };
}
