@page "/Charts/StepArea"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Step Area";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the data about electricity production by using renewable and non-renewable resources by using default step area series in the chart.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the StepArea type charts. This series forms the step line progress, by connecting points through vertical and horizontal lines with area filled. You can use <code>dashArray</code>, <code>width</code>, <code>fill</code> properties to customize the area. <code>Marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
    </p>
    <br>

    <p>
        More information on the steparea series can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart id="steparea" title="Electricity- Production">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartPrimaryXAxisMajorGridLines Width="0"></ChartPrimaryXAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Production (Billion as kWh)" LabelFormat="{value}B">
            <ChartPrimaryYAxisLineStyle Width="0"></ChartPrimaryYAxisLineStyle>
            <ChartPrimaryYAxisMajorTickLines Width="0"></ChartPrimaryYAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipsettings enable="true"></ChartTooltipsettings>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@chartData" name="Renewable" xName="xValue" width="2"
                         yName="yValue" type="ChartSeriesType.StepArea">
            </ChartSeries>
            <ChartSeries dataSource="@chartData" name="Non-Renewable" xName="xValue" width="2"
                         yName="yValue1" type="ChartSeriesType.StepArea">
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{

        public class StepAreaChartData
        {
            public double xValue;
            public double yValue;
            public double yValue1;
        }

        List<StepAreaChartData> chartData = new List<StepAreaChartData>
        {
            new StepAreaChartData { xValue = 2000, yValue = 416, yValue1 = 180 },
            new StepAreaChartData { xValue = 2001, yValue = 490, yValue1 = 240 },
            new StepAreaChartData { xValue = 2002, yValue = 470, yValue1 = 370 },
            new StepAreaChartData { xValue = 2003, yValue = 500, yValue1 = 200 },
            new StepAreaChartData { xValue = 2004, yValue = 449, yValue1 = 229 },
            new StepAreaChartData { xValue = 2005, yValue = 470, yValue1 = 210 },
            new StepAreaChartData { xValue = 2006, yValue = 437, yValue1 = 337 },
            new StepAreaChartData { xValue = 2007, yValue = 458, yValue1 = 258 },
            new StepAreaChartData { xValue = 2008, yValue = 500, yValue1 = 300 },
            new StepAreaChartData { xValue = 2009, yValue = 473, yValue1 = 173 },
            new StepAreaChartData { xValue = 2010, yValue = 520, yValue1 = 220 },
            new StepAreaChartData { xValue = 2011, yValue = 509, yValue1 = 309 },
        };
}
