@page "/Grid/Reorder"

@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Reorder";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
			This sample demonstrates reordering of the Grid columns. Select column name and index from properties panel to reorder
        the columns. You can also reorder columns by simply drag and drop in the desired column position.
		</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>Reordering can be enabled by setting <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html#allowreordering-boolean'>
        AllowReordering</a></code> property as true. 
        Reordering can be done by drag and drop the column header 
        from one index to another index within the Grid.</p>
        <p>The location in which the column to be placed, will be indicated by two arrows symbols.</p>
        <p>In this demo, you can either reorder columns by drag and drop or by selecting column name and 
           column index to reorder from the dropdown.
        </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid ID="Grid" DataSource="@gridData" AllowReordering="true" AllowPaging="true">
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="@TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" TextAlign="@TextAlign.Right" Width="120" Format="C2"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 105px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Column</td>
            <td>
                <EjsDropDownList ID="column" Index="0" PopupWidth="110px" DataSource="@columns" Change="@onchange">
                    <DropDownListFieldSettings text="id" value="name"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Column Index</td>
            <td>
                <EjsDropDownList ID="columnindex" Index="0" PopupWidth="110px" DataSource="@indexes" Change="@onmodechange">
                    <DropDownListFieldSettings text="id" value="index"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@functions{

    public List<OrdersDetails> gridData { get; set; }

    public class Columns
    {
        public string id { get; set; }

        public string name { get; set; }
    }

    List<Columns> columns = new List<Columns>()
    {
        new Columns(){ id= "Order ID", name= "Order ID" },
        new Columns(){ id= "Customer ID", name= "Customer ID" },
        new Columns(){ id= "Freight", name= "Freight" },
        new Columns(){ id= "Ship City", name= "Ship City" },
        new Columns(){ id= "Ship Country", name= "Ship Country" },
    };

    public class Index
    {
        public string id { get; set; }

        public string index { get; set; }
    }

    List<Index> indexes = new List<Index>()
    {
        new Index(){ id= "1", index= "1" },
        new Index(){ id= "2", index= "2" },
        new Index(){ id= "3", index= "3" },
        new Index(){ id= "4", index= "4" },
        new Index(){ id= "5", index= "5" },
    };

    public void onchange(object args)
    {
        //Fix by core team.
    }

    public void onmodechange(object args)
    {
        //Fix by core team.
    }

    protected override void OnInit()
    {
        gridData = OrdersDetails.GetAllRecords();
    }
}
