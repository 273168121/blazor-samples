@page "/Grid/Aggregate"

@using Syncfusion.EJ2.Blazor.Grids

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Default Aggregate";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates aggregate functionality of the Grid. In this sample, the aggregate value for the column Freight is displayed in column footer.</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>The Grid supports aggregates which will be displayed at the footer, group footer and group caption of the Grid.
    The aggregate configurations can be provided by the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-grid.html'>
        aggregates
        </a></code> property.</p>
    <p>The built-in aggregates are,</p>
     <ul>
        <li><code>Sum</code></li>     
        <li><code>Average</code></li>     
        <li><code>Min</code></li>     
        <li><code>Max</code></li>     
        <li><code>Count</code></li>     
        <li><code>TrueCount</code></li>     
        <li><code>FalseCount</code></li>     
        <li><code>Custom</code> - Requires the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#customaggregate-string'>
        customAggregate
        </a></code> property to perform aggregation.
        The custom aggregate value can be accessed inside template using the key <code>${custom}</code></li>     
    </ul>    
    <p>
        In this demo, the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#footertemplate-string'>
        footerTemplate</a></code> property is used to display four different aggregates in the Grid footer. 
        In the first aggregate row, the <code>Sum</code> aggregate type is used by setting the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#type-string---string'>
        type</a></code> and <code><a target='_blank' class='code'
 href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#field-string'>
        field</a></code> property as <strong><i>Freight</i></strong> which will be used to perform the aggregation.
        The aggregate value is accessed inside the <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#footertemplate-string'>
        footerTemplate</a></code> using its <code><a target='_blank' class='code'
        href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#type-string---string'>
        type</a></code> name (<code>${Sum}</code>).
        The aggregate value will be formatted based on its <code><a target='_blank' class='code'
 href='http://ej2.syncfusion.com/documentation/grid/api-aggregateColumn.html#format-string---numberformatoptions---dateformatoptions'>
        format</a></code> value(<strong><i>C2</i></strong>) before being displayed. 
    </p>
    <p>The template expression should be provided inside <code>${...}</code> the interpolation syntax.</p>"   
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid id="Grid" DataSource="@gridData" AllowPaging="true">
                <GridAggregates>
                    <GridAggregate>
                        <GridAggregateColumns>
                            <GridAggregateColumn Field="Freight" Type="Sum" Format="C2" FooterTemplate="Sum: ${Sum}"></GridAggregateColumn>
                        </GridAggregateColumns>
                    </GridAggregate>
                    <GridAggregate>
                        <GridAggregateColumns>
                            <GridAggregateColumn Field="Freight" Type="Average" Format="C2" FooterTemplate="Average: ${Average}"></GridAggregateColumn>
                        </GridAggregateColumns>
                    </GridAggregate>
                </GridAggregates>
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" Format="C2" TextAlign="@TextAlign.Right" Width="160"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.OrderDate) HeaderText="Order Date" Format="yMd" Type="date" TextAlign="@TextAlign.Right" Width="130"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="140"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@functions{

    public List<OrdersDetails> gridData { get; set; }

    protected override void OnInit()
    {
        gridData = OrdersDetails.GetAllRecords();
    }
}
