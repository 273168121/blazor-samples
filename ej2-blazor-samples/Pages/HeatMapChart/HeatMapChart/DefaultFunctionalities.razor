@page "/HeatMapChart/DefaultFunctionalities"
@using Syncfusion.EJ2.RazorComponents.HeatMap
@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_heatmapdata
@{
    SampleBrowser.CurrentSampleName = "Default Functionalities";
    SampleBrowser.CurrentControlName = "HeatMapChart";
    SampleBrowser.CurrentControlCategory = "HeatMapChart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.HeatMapChart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
         This sample demonstrates the default functionalities of the ListView. Click any list item to select and highlight an item.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render a heat map with the provided data source. The palette color is applied to the items in heat map. The default legend is enabled in this example to represent the items.
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item in touch enabled devices.
    </p>
    <br>
    <p style='font-weight: 500'>Injecting Module</p>
    <p>
        Heatmap component features are segregated into individual feature-wise modules. To use a tooltip, inject the <code>Tooltip</code> module
        using the <code>Heatmap.Inject(Tooltip)</code> method, and use a legend by injecting the <code>Legend</code> module using the 
        <code>Heatmap.Inject(Legend)</code> method.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <div class="row">
        <div class="col-md-12">
            <Ejsheatmap id="Container" DataSource="@heatmapData" @ref="heatmap" XAxis="@xAxis" YAxis="@yAxis">
                <HeatMapTitle Text="Sales Revenue per Employee (in 1000 US$)"></HeatMapTitle>
            </Ejsheatmap>
        </div>
    </div>
</div>
@code{
   

    public object xAxis = new
    {
        labels = new string[] {"Nancy", "Andrew", "Janet", "Margaret", "Steven", "Michael", "Robert",
"Laura", "Anne", "Paul", "Karin", "Mario" }
    };
    public object yAxis = new
    {
        labels = new string[] { "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" }
    };
    EjsHeatMap heatmap;
    public object heatmapData { get; set; }
    protected override void OnAfterRender()
    {
        heatmapData = this.heatmap.DataSource = HeatMapData.GetDefaultData();
    }
}