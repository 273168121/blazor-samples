@page "/Charts/ZoomingandPanning"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Zooming and Panning";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the consumer price data with default line series in the chart.
        Data points are enhanced with marker and tooltip
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the line type charts. Line type charts are used to represent time-dependent data, showing trends in data at equal intervals.
        You can use <code>dashArray</code>, <code>width</code>, <code>fill</code> properties to customize the line. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the line series can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart id="container" title="Sales History of Product X">
    <ChartPrimaryXAxis Title="Years" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.DateTime" Skeleton="yMMM" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
        <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
    </ChartPrimaryXAxis>
    <ChartPrimaryYAxis Title="Profit ($)" RangePadding="ChartRangePadding.None">
        <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
    </ChartPrimaryYAxis>
    <ChartLegendSettings Visible="false"></ChartLegendSettings>
    <ChartZoomSettings enableMouseWheelZooming="true" enableScrollbar="true" enablePinchZooming="true" enableSelectionZooming="true"></ChartZoomSettings>
    <ChartSeriesCollection>
        <ChartSeries dataSource="@dataSource" name="Warmest" xName="xValue" width="2" opacity="1" yName="yValue" type="ChartSeriesType.Area" fill="url(#gradient-chart)">
           <ChartSeriesBorder Width="0.5" Color="#00bdae"></ChartSeriesBorder>          
        </ChartSeries>
    </ChartSeriesCollection>
    <ChartArea>
        <ChartAreaBorder Width="0"></ChartAreaBorder>
    </ChartArea>
</EjsChart>
</div>

@code {

    public class ZoomingandPanningData
    {
        public DateTime xValue;
        public double yValue;
    }
    List<ZoomingandPanningData> dataSource = new List<ZoomingandPanningData>
	{
        new ZoomingandPanningData { xValue = new DateTime(2000, 02, 11), yValue = 14 },
        new ZoomingandPanningData { xValue = new DateTime(2000, 09, 04), yValue = 20 },
        new ZoomingandPanningData { xValue = new DateTime(2001, 02, 11), yValue = 25 },
        new ZoomingandPanningData { xValue = new DateTime(2001, 09, 16), yValue = 21 },
        new ZoomingandPanningData { xValue = new DateTime(2002, 02, 07), yValue = 13 },
        new ZoomingandPanningData { xValue = new DateTime(2002, 09, 07), yValue = 18 },
        new ZoomingandPanningData { xValue = new DateTime(2003, 02, 11), yValue = 24 },
        new ZoomingandPanningData { xValue = new DateTime(2003, 09, 14), yValue = 23 },
        new ZoomingandPanningData { xValue = new DateTime(2004, 02, 06), yValue = 19 },
        new ZoomingandPanningData { xValue = new DateTime(2004, 09, 06), yValue = 31, },
        new ZoomingandPanningData { xValue = new DateTime(2005, 02, 11), yValue = 39 },
        new ZoomingandPanningData { xValue = new DateTime(2005, 09, 11), yValue = 50 },
        new ZoomingandPanningData { xValue = new DateTime(2006, 02, 11), yValue = 24 },
    };

}
<svg style="height: 0">
    <defs>
        <linearGradient id="gradient-chart" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0" />
            <stop offset="1" />
        </linearGradient>
    </defs>
</svg>
<style>

    #gradient-chart stop {
        stop-color: #BDEDE9;
    }

        #gradient-chart stop[offset="0"] {
            stop-opacity: 0.75;
        }

        #gradient-chart stop[offset="1"] {
            stop-opacity: 0;
        }
</style>