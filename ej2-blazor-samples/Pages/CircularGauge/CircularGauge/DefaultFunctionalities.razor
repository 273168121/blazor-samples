@page "/CircularGauge/DefaultFunctionalities"

@using Syncfusion.EJ2.RazorComponents.CircularGauge

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Default Functionalities";
    SampleBrowser.CurrentControlName = "CircularGauge";
    SampleBrowser.CurrentControlCategory = "CircularGauge";
    SampleBrowser.CurrentControl = SampleBrowser.Config.CircularGauge;
    SampleBrowser.ActionDescription = new string[] {
        @" <p>
            This sample illustrates the default rendering of circular gauge.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this example, you can see how to render a default circular gauge. The CircularGauge control visualizes the numerical values of scales in a circular manner. You can use <code>axes</code>, <code>ranges</code>, <code>pointers</code> properties to customize the default appearance of the gauge. In this sample, a axis with multiple ranges and a pointer has been used.
        </p>
        <p>
            More information on the gauge can be found in this
            <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation"">documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsCircularGauge ID="gauge" Axes="axes"></EjsCircularGauge>
</div>

@code {
public List<CircularGaugeAxis> axes { get; set; } = new List<CircularGaugeAxis>()
{
new CircularGaugeAxis()
{
    Radius = "80%",
    StartAngle = 230,
    EndAngle = 130,
    MajorTicks = new { width = "0px" },
    MinorTicks = new { width = "0px" },
    LineStyle = new { width = 8, color = "#E0E0E0" },
    LabelStyle = new { font = new { fontFamily = "Roboto", size = "12px", fontWeight = "Regular" }, offset = -5 },
    Pointers  = new List<Object>
    {
        new
        {
            value = 60,
            radius = "60%",
            color = "#757575",
            pointerWidth = 7,
            cap = new { radius = 8, color = "#757575", border = new { width = 0 } },
            needleTail = new { color = "#757575", length = "25%" }
        }
    }
}
};
}
