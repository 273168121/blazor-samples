@page "/CircularGauge/Compass"

@using Syncfusion.EJ2.RazorComponents.CircularGauge

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Direction Compass";
    SampleBrowser.CurrentControlName = "CircularGauge";
    SampleBrowser.CurrentControlCategory = "CircularGauge";
    SampleBrowser.CurrentControl = SampleBrowser.Config.CircularGauge;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample illustrates how to make a direction compass by using the features in gauge. Color of the needle and direction labels is customized here.
    </p>"
    };
        SampleBrowser.Description = new string[] {
        @" <p>
        Circular gauge can be customized as per a user requirement. In this example, a direction compass has been depicted by adding needles and by customizing the <code> labels </code> to show the direction.
    </p>
    <br />
    <p>
        More information on the needle and labels can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation"">documentation section</a>.
    </ p > "
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsCircularGauge ID="gauge" Axes="@axes" ref="cgauge"></EjsCircularGauge>
</div>
@functions {
EjsCircularGauge cgauge;
public string[] label { get; set; } = { "N", "NE", "E", "SE", "S", "SW", "W", "NW", "" };
public List<object> axes { get; set; } = new List<object>
{
new
{
    radius = "70%",
    lineStyle = new { width = 10, color = "#E0E0E0" },
    labelStyle = new { font = new { size = "12px", fontFamily = "Roboto" }, useRangeColor = true, autoAngle = true, hiddenLabel = "Last" },
    majorTicks = new { color = "#9E9E9E", height = 15, interval = 1 },
    minorTicks = new { color = "#9E9E9E", height = 10, interval = 0.5 },
    startAngle = "0",
    endAngle = "360",
    minimum = 0,
    maximum = 8,
    ranges = new List<object>
    {
        new
        {
            start = 7, end = 7, color = "#f03e3e"
        }
    },
    pointers  = new List<object>
    {
        new
        {
            value = 7,
            radius = "50%",
            color = "#f03e3e",
            pointerWidth = 20,
            cap = new { radius = 0 },
            animation = new { enable = false, duration = "0" },
        },
        new
        {
            value = 3,
            radius = "50%",
            color = "#9E9E9E",
            pointerWidth = 20,
            cap = new { radius = 0 },
            animation = new { enable = false, duration = "0" },
        }
    }
}
};
}