@page "/LinearGauge/Container"

@using Syncfusion.EJ2.RazorComponents.LinearGauge
@using Syncfusion.EJ2.RazorComponents.DropDowns
@using Newtonsoft.Json;

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Container";
    SampleBrowser.CurrentControlName = "LinearGauge";
    SampleBrowser.CurrentControlCategory = "LinearGauge";
    SampleBrowser.CurrentControl = SampleBrowser.Config.LinearGauge;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the type of containers used in linear gauge. Orientation and container type of linear gauge can be changed by using <code>Orientation</code> and <code>Container Type</code> options
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            This sample demonstrates the orientation and container customization in linear gauge. The gauge can be rendered either in
            vertical or horizontal orientation. And you can use <code>type</code> property in container to change the
            type of the container.
        </p>
        <br>
        <p>
            More information about container can be found in this
            <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation"">documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@


<div class="control-section">
   <EjsLinearGauge ID="gauge" title="Temperature Measure">
        <LinearGaugeContainer Width="13" RoundedCornerRadius="5" Type="ContainerType.Thermometer">
            <LinearGaugeAxes>
                <LinearGaugeAxis Minimum="0" Maximum="180">
                            <LinearGaugeMajorTicks Color="#9e9e9e" Interval="20" Height="20">
                            </LinearGaugeMajorTicks>
                            <LinearGaugeMinorTicks Color="#9e9e9e" Interval="10" Height="10">
                            </LinearGaugeMinorTicks>
                        <LinearGaugePointers>
                            <LinearGaugePointer Value="90" Height="13" Width="13" Type="Point.Bar" Color="#f02828">                    
                            </LinearGaugePointer>
                        </LinearGaugePointers>
                </LinearGaugeAxis>
                <LinearGaugeAxis Minimum="0" Maximum="180" OpposedPosition="true"> 
                        <LinearGaugeMajorTicks  Interval="20" Height="20">
                        </LinearGaugeMajorTicks>
                        <LinearGaugeMinorTicks Color="#9e9e9e" Interval="10" Height="10">
                        </LinearGaugeMinorTicks>                    
                    <LinearGaugePointers>
                        <LinearGaugePointer  Width="0">                    
                        </LinearGaugePointer>
                    </LinearGaugePointers>
                </LinearGaugeAxis>
            </LinearGaugeAxes>
        </LinearGaugeContainer >
</EjsLinearGauge>
</div>

<style>
    #control-section {
        padding: 0px !important;
    }
</style>

@code {

    public ContainerType type = ContainerType.Thermometer;
    public object line= new{ width= 0 };
    public object majorTicks = new {  color= "#9e9e9e", interval=  20 };
    public object majorTicks1 = new { interval=  20 };
    public object minorTicks = new {  color= "#9e9e9e"};
    public object pointers  = new List<object>
    {
    new {
    value= 90,
    height= 13,
    width= 13,
    roundedCornerRadius= 5,
    type= "Bar",
    color= "#f02828"
    }
    };
    public object pointers1  = new List<object>
    {
        new
        {
            width = "0"
        }
    };
    }