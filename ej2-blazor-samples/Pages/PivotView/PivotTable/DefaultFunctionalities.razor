@page "/PivotView/DefaultFunctionalities"

@using Syncfusion.EJ2.RazorComponents.PivotView

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Default Functionalities";
    SampleBrowser.CurrentControlName = "PivotTable";
    SampleBrowser.CurrentControlCategory = "PivotTable";
    SampleBrowser.CurrentControl = SampleBrowser.Config.PivotTable;
    SampleBrowser.ActionDescription = new string[] {
@"<p>
    This sample demonstrates the basic rendering of the pivotgrid widget with minimum configuration.
</p>"
};
    SampleBrowser.Description = new string[] {
@"<p>
    The pivotgrid widget is an easily configurable, presentation-quality business control used for visualizing relational data
    sources in cross-tabular format. It is displayed with drill-up and drill-down capabilities and allows users to easily
    aggregate data. Sorting, filtering, and grouping data are also supported.
</p>
<p>
    In this demo, the pivotgrid widget is populated with its minimum default settings.
</p>"
};
}
@*End:Hidden*@

<div class="control-section">
    <div class="content-wrapper">
        <EjsPivotView ID="pivotview" ref="pivotView" Width="100%" Height="300" DataSource="@PivotDataSource">
            <PivotViewGridSettings ColumnWidth="140"></PivotViewGridSettings>
        </EjsPivotView>
    </div>
</div>

<style>
    #pivotview {
        width: 100%;
        height: 100%;
    }
</style>

@functions{

    EjsPivotView pivotView;

    static PivotViewData pivotData = new PivotViewData();

    static List<object> pivotRows { get; set; } = new List<object>
    {
       new { name = "Country" },
       new { name = "Products" }
    };

    static List<object> pivotColumns { get; set; } = new List<object>
    {
       new { name = "Year" },
       new { name = "Quarter" }
    };

    static List<object> pivotValues { get; set; } = new List<object>
    {
       new { name = "Sold", caption = "Units Sold" },
       new { name = "Amount", caption = "Sold Amount" }
    };

    static List<object> pivotFormatSettings { get; set; } = new List<object>
    {
       new { name = "Amount", format = "C0" }
    };

    static List<string> drilledItems = new List<string> { "France" };

    static List<object> pivotDrillMembers { get; set; } = new List<object>
    {
       new { name = "Country", items = drilledItems }
    };
    [Parameter]
    private object PivotDataSource { get; set; } = new
    {
        data = pivotData.GetDefaultData(),
        expandAll = false,
        enableSorting = true,
        rows = pivotRows,
        columns = pivotColumns,
        values = pivotValues,
        formatSettings = pivotFormatSettings,
        drilledMembers = pivotDrillMembers
    };
}