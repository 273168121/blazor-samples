@page "/Schedule/Agenda"

@using Syncfusion.EJ2.RazorComponents.Schedule

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Agenda View";
    SampleBrowser.CurrentControlName = "Scheduler";
    SampleBrowser.CurrentControlCategory = "Scheduler";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Schedule;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This demo showcases the agenda view and the configurations available in it.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this demo, Agenda view is set as active view on Scheduler and made its
            <code>allowVirtualScrolling</code> option as false. With this settings, the Agenda view loads the initial data for the next 7 days count from the date
            value assigned to the
            <code>selectedDate</code> property of the Schedule. The initial data loading for 7 days count is due to the default value assigned to the
            <code>agendaDaysCount</code> property which can be customized as per the user needs.
        </p>
        <p>
            When the
            <code>allowVirtualScrolling</code> property is set to true, the user is allowed to scroll through all the events simply by scrolling up and down upto
            the last event available in Schedule.
        </p>
        <p>
            By default, the days which doesn't have any events will be hidden on this view - but by setting
            <code>hideEmptyAgendaDays</code> property to false will allow the
            <code>No Events</code> text to be displayed against the dates that has no events.
        </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="schedule-wrapper">
        <EjsSchedule id="schedule" width="100%" height="650px" selectedDate="new DateTime(2019, 1, 10)" EventSettings="@ScheduleData">
            <ScheduleViews>
                <ScheduleView option="@agenda" allowVirtualScrolling="false"></ScheduleView>
            </ScheduleViews>
        </EjsSchedule>
    </div>
</div>

@code{
    static ScheduleData data = new ScheduleData();
    private object viewList { get; set; } = new string[] { "Agenda" };
    [Parameter]
    private object ScheduleData { get; set; } = new
    {
        dataSource = data.GetScheduleData()
    };
public View agenda = View.Agenda;
}
