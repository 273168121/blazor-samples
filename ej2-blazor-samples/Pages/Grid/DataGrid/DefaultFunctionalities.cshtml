@page "/Grid/DefaultFunctionalities"

@using Syncfusion.EJ2.RazorComponents.Grids

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Default Functionalities";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the default rendering of the Grid with minimum configuration.</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>
			The Grid is used to display and manipulate tabular data with configuration options to control the way the data is presented
			and manipulated. It will pull the data from a data source, such as IEnumerable, OData web services,
			or <code>DataManager</code> binding data fields to columns. Also, displaying a column header to identify the field with
			support for grouped records.
		</p>
		<p>
			In this demo, the Grid is populated with its minimum default settings.
		</p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsGrid id="Grid" ref="defaultGrid" DataSource="@gridData" AllowPaging="true">
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field="OrderID" HeaderText="Order ID" TextAlign="@Syncfusion.EJ2.RazorComponents.Grids.TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field="CustomerID" HeaderText="Customer Name" Width="150"></GridColumn>
                    <GridColumn Field="OrderDate" HeaderText=" Order Date" Format="yMd" Type="date" TextAlign="@Syncfusion.EJ2.RazorComponents.Grids.TextAlign.Right" Width="130"></GridColumn>
                    <GridColumn Field="Freight" HeaderText="Freight" Format="C2" TextAlign="@Syncfusion.EJ2.RazorComponents.Grids.TextAlign.Right" Width="120"></GridColumn>                   
                    <GridColumn Field="ShipCountry" HeaderText="Ship Country" Width="150"></GridColumn>

                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>
@functions{

        EjsGrid defaultGrid;

        public object gridData { get; set; }

    protected override void OnAfterRender()
    {
    gridData = this.defaultGrid.DataSource = OrdersDetails.GetAllRecords();
    }
    }
