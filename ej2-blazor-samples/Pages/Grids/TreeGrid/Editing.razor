@page "/TreeGrid/Editing"

@using Syncfusion.EJ2.RazorComponents.TreeGrid
@using Syncfusion.EJ2.RazorComponents.Grids;

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_treedata

@{
    SampleBrowser.CurrentSampleName = "Inline Editing";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates CRUD operations in TreeGrid. You can perform CRUD operations as follows,
        </p>
        <ul>
           <li><code>Add </code> - To add new record, click Add toolbar button.</li>
           <li><code>Edit</code> - To edit record, double click a row or click toolbar Edit button after selected a row.</li>
           <li><code>Delete</code> - To delete record, click toolbar Delete button after selected a row.</li>
           <li><code>Update, Cancel</code> - You can save or discard changes by click toolbar Update and Cancel button respectively.</li>
       </ul>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            The TreeGrid supports CRUD operations. This CRUD operations can be configured in TreeGrid using <code>editSettings</code>. Also, it has different modes to manipulate the datasource.
        </p>
        <p>
           The available modes are,
        </p>
        <ul>
           <li><code>Row </code></li>
           <li><code>Cell</code></li>
           <li><code>Dialog</code></li>
        </ul>
        <p>
          In this demo, Row mode is enabled for editing by default. You can start editing any row by double clicking on it or clicking on toolbar’s Edit button, then the currently selected row will be changed to edited state. You can change the row values and save edited data to the datasource.
        </p>
        <br>
        <p>
            More information about Edit Modes can be found in this documentation section.
        </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsTreeGrid ID="TreeGrid" ref="treeGrid" dataSource="@treedata" height="400" childMapping="Children" treeColumnIndex="1" toolbar="@(new List<string>() { "Add", "Delete", "Update", "Cancel" })">
                <TreeGridEditSettings allowAdding="true" allowEditing="true" allowDeleting="true"></TreeGridEditSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskId" HeaderText="Task ID" IsPrimaryKey="true" Width="100" TextAlign="@Syncfusion.EJ2.RazorComponents.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" EditType="stringedit" Width="190"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText=" Start Date" EditType="datepickeredit" Format="yMd" Type="date" Width="165" TextAlign="@Syncfusion.EJ2.RazorComponents.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="EndDate" HeaderText=" End Date" EditType="datepickeredit" Format="yMd" Type="date" Width="165" TextAlign="@Syncfusion.EJ2.RazorComponents.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="90" TextAlign="@Syncfusion.EJ2.RazorComponents.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" EditType="stringedit" Width="135"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>

        </div>
    </div>
</div>

@functions{

    EjsTreeGrid treeGrid;

    public object treecolumns { get; set; }
 
    public object treedata { get; set; }

    public object toolbar { get; set; }

    public object edit { get; set; }

    public List<string> toolbarSettings = new List<string> { "Add", "Delete", "Update", "Cancel" };

    public object editSettings = new { allowAdding = "true", allowEditing = "true", allowDeleting = "true" };

    protected override void OnAfterRender()
    {
       treedata = this.treeGrid.DataSource = TreeData.GetDefaultData();
       toolbar = this.treeGrid.Toolbar = toolbarSettings;
    }
 }
