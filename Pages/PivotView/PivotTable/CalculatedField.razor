@page "/PivotView/CalculatedField"

@using Syncfusion.EJ2.Blazor.PivotView

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Calculated Field";
    SampleBrowser.CurrentControlName = "PivotTable";
    SampleBrowser.CurrentControlCategory = "PivotTable";
    SampleBrowser.CurrentControl = SampleBrowser.Config.PivotTable;
    SampleBrowser.ActionDescription = new string[] {
@"<p>In this sample, <b>Total Amount</b> acts as the calculated field. Users can insert a new basic arithmetic
        expression
        based on the existing measure items either through a dialog at runtime or through code behind.</p>"
};
    SampleBrowser.Description = new string[] {
@"<p>The calculated field feature allows users to create custom fields which are not present in the actual data. Users
        can
        create these fields using basic mathematical expression collaborating with existing fields. Calculated fields
        can
        be created through UI dialog as well as code behind and it can be enabled by setting
        <code>AllowCalculatedField</code> as true. The
        <code>CalculatedFieldSettings</code> property is available to configure the calculated field in code behind.
        <br>
        </p>"
};
}
@*End:Hidden*@

@{var amount = "\"" + "Sum(Amount)" + "\"";}
@{var sold = "\"" + "Sum(Sold)" + "\"";}
@{ var totalPrice = amount + "+" + sold;}

<div class="control-section">
    <div class="content-wrapper">
        <EjsPivotView ID="pivotview" Width="100%" Height="340" ShowFieldList=true AllowCalculatedField=true >
            <PivotViewDataSourceSettings DataSource="@data" ExpandAll=false EnableSorting=true>
                <PivotViewColumns>
                    <PivotViewColumn Name="Year"></PivotViewColumn>
                    <PivotViewColumn Name="Quarter"></PivotViewColumn>
                </PivotViewColumns>
                <PivotViewRows>
                    <PivotViewRow Name="Country"></PivotViewRow>
                    <PivotViewRow Name="Products"></PivotViewRow>
                </PivotViewRows>
                <PivotViewValues>
                    <PivotViewValue Name="Sold" Caption="Units Sold"></PivotViewValue>
                    <PivotViewValue Name="Amount" Caption="Sold Amount"></PivotViewValue>
					<PivotViewValue Name="Total" Caption="Total Amount" Type=SummaryTypes.CalculatedField></PivotViewValue>
                </PivotViewValues>
                <PivotViewFilters>
                    <PivotViewFilter Name="Product_Categories" Caption="Product Categories"></PivotViewFilter>
                </PivotViewFilters>
                <PivotViewFormatSettings>
                    <PivotViewFormatSetting Name="Amount" Format="C" UseGrouping=true></PivotViewFormatSetting>
                </PivotViewFormatSettings>
				<PivotViewCalculatedFieldSettings>
                    <PivotViewCalculatedFieldSetting Name="Total" Formula="@totalPrice">
                    </PivotViewCalculatedFieldSetting>
                </PivotViewCalculatedFieldSettings>
            </PivotViewDataSourceSettings>
            <PivotViewGridSettings ColumnWidth="140"></PivotViewGridSettings>
        </EjsPivotView>
    </div>
</div>

<style>
    #pivotview {
        width: 100%;
        height: 100%;
    }
    .e-pivotview {
        min-height: 200px;
    }
</style>

@code{

    EjsPivotView pivotView;

    static PivotViewData pivotData = new PivotViewData();

    private List<PivotViewData.Pivot_Data> data = pivotData.GetPivot_Data();
   
}