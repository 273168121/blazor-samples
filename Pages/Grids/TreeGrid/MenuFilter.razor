@page "/TreeGrid/MenuFilter"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.DropDowns


@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_treedata
@{
    SampleBrowser.CurrentSampleName = "MenuFilter";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the way of filtering TreeGrid columns using menu and excel filter UI. In this sample, click the filtering
        icon from column header to show filter UI for a particular column.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            The filtering feature enables the user to view the reduced amount of records based on filter criteria. It can be enabled
        by setting <code>allowFiltering
        </code> property as true.
        </p>
        <p>TreeGrid supports the following filter types. They are </p>
        <ul>
            <li><code>FilterBar</code></li>
                <li><code>Menu</code></li>
                <li><code>Excel</code></li>
        </ul>
        you can change the filter type by setting <code>filterSettings->type</code>
        <p>TreeGrid provides support for a set of filtering modes with hierarchyMode property. The below are the type of filter mode available in TreeGrid. </p>
        <ul>
           <li><code>Parent</code> - This is the default filter hierarchy mode in TreeGrid. 
           The filtered records are displayed with its parent records, if the filtered records not have any parent record then the filtered record only displayed.</li>
           <li><code>Child</code> - The filtered records are displayed with its child record, if the filtered records do not have any child record then only the filtered records are displayed.</li>
           <li><code>Both</code> - The filtered records are displayed with its both parent and child record.
           If the filtered records do not have any parent and child record then only the filtered records are displayed.</li>
           <li><code>None</code> - Only the filtered records are displayed.</li>
         </ul>

        <p>In this demo, filter menu enabled by default, you can switch to other hierarchy mode of filtering by using dropdown.</p>
        <br>

        <p>
            More information on the data binding can be found in this documentation section.
        </p>"
    };
}
@*End:Hidden*@


<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsTreeGrid ID="TreeGrid" AllowFiltering="true" AllowPaging="true" ChildMapping="Children" TreeColumnIndex="1">
                <EjsDataManager Json="@treedata" Adaptor="Adaptors.JsonAdaptor"></EjsDataManager>
                <TreeGridFilterSettings Type="@Syncfusion.EJ2.Blazor.TreeGrid.FilterType.Menu"></TreeGridFilterSettings>
                <TreeGridPageSettings PageSize="10"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskId" HeaderText="Task ID" Width="120" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="220"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="130" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="130" TextAlign="@TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="130"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>
        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 105px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Filter Type</td>
            <td>
                <EjsDropDownList ID="types" Index="0" PopupWidth="110px" DataSource="@types" Change="@onchange">
                    <DropDownListFieldSettings text="id" value="type"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>

        <tr>
            <td class="left-side" style="padding-right:15px;">Hierarchy Mode</td>
            <td>
                <EjsDropDownList ID="modes" Index="0" PopupWidth="110px" DataSource="@lines" Change="@modechange">
                    <DropDownListFieldSettings text="id" value="mode"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@code{

    EjsTreeGrid treeGrid;

    public class Modes
    {
        public string id { get; set; }

        public string mode { get; set; }
    }

    public class FilterType
    {
        public string id { get; set; }

        public string type { get; set; }
    }

    List<Modes> lines = new List<Modes>()
    {
        new Modes(){ id= "Parent", mode= "Parent" },
        new Modes(){ id= "Child", mode= "Child" },
        new Modes(){ id= "Both", mode= "Both" },
        new Modes(){ id= "None", mode= "None" },
    };

    List<FilterType> types = new List<FilterType>()
    {
        new FilterType(){ id= "Menu", type= "Menu" },
        new FilterType(){ id= "Excel", type= "Excel" },
    };

    public void onchange(object args)
    {
        //Fix by core team.
    }

    public void modechange(object args)
    {
        //Fix by core team.
    }

    public TreeData.BusinessObject[] treedata { get; set; }

    protected override void OnInit()
    {
        this.treedata = TreeData.GetDefaultData().Cast<TreeData.BusinessObject>().ToArray();
    }
}
