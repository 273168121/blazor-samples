@page "/TreeView/IconsandImages"

@using Syncfusion.EJ2.Blazor.Lists
@using Syncfusion.EJ2.Blazor.Navigations

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Icons and Images";
    SampleBrowser.CurrentControlName = "TreeView";
    SampleBrowser.CurrentControlCategory = "Navigations";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeView;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample demonstrates the node can be configured by icons/images in TreeView. Click on icon or double click on node to expand/collapse it, and show the icons/images that configured with nodes.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>The TreeView component has the built-in option to customize each node's appearance with the icons and images by mapping the iconCss and imageUrl fields.

        In this demo, the TreeView is showcased like a file system with custom icons and images.</p>"
    };
}
@*End:Hidden*@
@using Syncfusion.EJ2
<div class="control-section">
    <div class="control_wrapper">
        <EjsTreeView TValue="Parentitem" SortOrder="@Syncfusion.EJ2.Blazor.Navigations.SortOrder.Ascending">
            <TreeViewFieldsSettings TValue="Parentitem" DataSource="@parentitem" Id="nodeId" Text="nodeText" Expanded="expanded" Child="@child" IconCss="icon" ImageUrl="image"></TreeViewFieldsSettings>
        </EjsTreeView>
    </div>
</div>

@code{
    private object child;
    private List<Parentitem> parentitem = new List<Parentitem>();
    private List<Childitem> childitem = new List<Childitem>();
    private List<Childitem> childitem2 = new List<Childitem>();
    private List<Childitem> childitem3 = new List<Childitem>();
    private List<Childitem> childitem4 = new List<Childitem>();

    protected override void OnInit()
    {
        base.OnInit();
        this.parentitem.Add(new Parentitem
        {
            nodeId = "01",
            nodeText = "Music",
            icon = "folder",
            child = childitem,
        });
        this.childitem.Add(new Childitem { nodeId = "01-01", nodeText = "Gouttes.mp3", icon = "audio" });

        this.parentitem.Add(new Parentitem
        {
            nodeId = "02",
            nodeText = "Videos",
            icon = "folder",
            child = childitem2,
        });
        this.childitem2.Add(new Childitem { nodeId = "02-01", nodeText = "Naturals.mp4", icon = "video" });
        this.childitem2.Add(new Childitem { nodeId = "02-02", nodeText = "Wild.mpeg", icon = "video" });

        this.parentitem.Add(new Parentitem
        {
            nodeId = "03",
            nodeText = "Documents",
            icon = "folder",
            child = childitem3,
        });
        this.childitem3.Add(new Childitem { nodeId = "03-01", nodeText = "Environment Pollution.docx", icon = "docx" });
        this.childitem3.Add(new Childitem { nodeId = "03-02", nodeText = "Global Water, Sanitation, & Hygiene.docx", icon = "docx" });
        this.childitem3.Add(new Childitem { nodeId = "03-03", nodeText = "Global Warming.ppt", icon = "ppt" });
        this.childitem3.Add(new Childitem { nodeId = "03-04", nodeText = "Social Network.pdf", icon = "pdf" });
        this.childitem3.Add(new Childitem { nodeId = "03-05", nodeText = "Youth Empowerment.pdf", icon = "pdf" });

        this.childitem2.Add(new Childitem { nodeId = "02-01", nodeText = "Naturals.mp4", icon = "video" });
        this.childitem2.Add(new Childitem { nodeId = "02-02", nodeText = "Wild.mpeg", icon = "video" });

        this.parentitem.Add(new Parentitem
        {
            nodeId = "04",
            nodeText = "Downloads",
            icon = "folder",
            child = childitem4,
        });
        this.childitem4.Add(new Childitem { nodeId = "04-01", nodeText = "UI-Guide.pdf", icon = "pdf" });
        this.childitem4.Add(new Childitem { nodeId = "04-02", nodeText = "Tutorials.zip", icon = "zip" });
        this.childitem4.Add(new Childitem { nodeId = "04-03", nodeText = "Game.exe", icon = "exe" });
        this.childitem4.Add(new Childitem { nodeId = "04-04", nodeText = "TypeScript.7z", icon = "zip" });

        this.child = "child";
    }
    public class Parentitem
    {
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string icon { get; set; }
        public bool expanded { get; set; }
        public bool selected { get; set; }
        public List<Childitem> child;

    }
    public class Childitem
    {
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string icon { get; set; }
        public bool expanded { get; set; }
        public bool selected { get; set; }
    }
}

<style>
    .control_wrapper {
        max-width: 500px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

    .e-treeview .e-list-img {
        width: 25px;
        height: 25px;
    }
    /* Loading sprite image for TreeView */
    .e-treeview .e-list-icon {
        background-repeat: no-repeat;
        background-image: url("css/treeview/images/file_icons.png");
        height: 20px;
    }
        /* Specify the icon positions based upon class name */
        .e-treeview .e-list-icon.folder {
            background-position: -197px -552px
        }

        .e-treeview .e-list-icon.docx {
            background-position: -197px -20px
        }

        .e-treeview .e-list-icon.ppt {
            background-position: -197px -48px
        }

        .e-treeview .e-list-icon.pdf {
            background-position: -197px -104px
        }

        .e-treeview .e-list-icon.images {
            background-position: -197px -132px
        }

        .e-treeview .e-list-icon.zip {
            background-position: -197px -188px
        }

        .e-treeview .e-list-icon.audio {
            background-position: -197px -244px
        }

        .e-treeview .e-list-icon.video {
            background-position: -197px -272px
        }

        .e-treeview .e-list-icon.exe {
            background-position: -197px -412px
        }
</style>