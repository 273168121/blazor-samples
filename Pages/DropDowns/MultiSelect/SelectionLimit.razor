@page "/MultiSelect/SelectionLimit"

@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor.Inputs

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "SelectionLimit";
    SampleBrowser.CurrentControlName = "MultiSelect";
    SampleBrowser.CurrentControlCategory = "MultiSelect";
    SampleBrowser.CurrentControl = SampleBrowser.Config.MultiSelect;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the maximum selection limit functionalities with checkbox of the MultiSelect. MultiSelect value can set restrictions based on the maximum selection length that can be selected.</p>"
    };
    SampleBrowser.Description = new string[] {
        @" <p>
            The MultiSelect has built-in support to limit the value selected in Multiselect component, when the <code>maximumSelectionLength</code> property is set as 3, maximum of only 3 value will be  selected in the MultiSelect.
        </p>
        <p>The selection limit sample illustrates  using the countries data. </p>
        <p>
            More information on the MultiSelect instantiation can be found in the
            <a href=""https://ej2.syncfusion.com/aspnetcore/documentation/multi-select/getting-started/"" target=""_blank""> documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@


<div class="control-section col-lg-12 selectionlimit">
    <div class="col-lg-9">
        <div class='content selectionlimit-multiselect'>
            <EjsMultiSelect @ref="MultiSelectObj" ID="checkList" PlaceHolder="Select countries" Mode="@VisualMode.CheckBox" MaximumSelectionLength="@MaximumLimit" DataSource="@country" ShowDropDownIcon="true" PopupHeight="350px">
                <MultiSelectFieldSettings text="Name" value="Code"></MultiSelectFieldSettings>
            </EjsMultiSelect>
        </div>
    </div>
    <div class="col-lg-3">
        <div class='content property-section'>
            <table>
                <tr>
                    <td>
                        <div class="selectionText">Selection Limit </div>
                    </td>
                    <td>
                        <EjsNumericTextBox @ref="NumericObj" ID="MaxSel" Width="100%" Format="n0" Value="@NumericValue" Min="1" Max="18"></EjsNumericTextBox>
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <button class="e-btn apply-limit" onclick="@ApplySelectionLimit">Apply</button>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<style>

    .control-section.selectionlimit {
        margin-top: 20px;
    }

    .selectionlimit-multiselect {
        width: 70%;
        margin-left: 70px;
    }

    .selectionText {
        margin: 10px;
        width: 100px;
    }

    .apply-limit {
        margin-top: 10px;
    }

</style>

@code{

    EjsMultiSelect MultiSelectObj;
    EjsNumericTextBox NumericObj;
    public string NumericValue { get; set; } = "3";
    public double MaximumLimit { get; set; } = 3;

    public void ApplySelectionLimit(UIMouseEventArgs args)
    {
        this.MultiSelectObj.Value = null;
        this.MultiSelectObj.DataBind();
        this.MultiSelectObj.MaximumSelectionLength = Convert.ToDouble(this.NumericObj.Value);
        this.MultiSelectObj.DataBind();
    }

    public class countries
    {
        public string Name { get; set; }

        public string Code { get; set; }
    }

    List<countries>  country = new List<countries>
    {
        new countries() { Name = "Australia", Code = "AU" },
        new countries() { Name = "Bermuda", Code = "BM" },
        new countries() { Name = "Canada", Code = "CA" },
        new countries() { Name = "Cameroon", Code = "CM" },
        new countries() { Name = "Denmark", Code = "DK" },
        new countries() { Name = "France", Code = "FR" },
        new countries() { Name = "Finland", Code = "FI" },
        new countries() { Name = "Germany", Code = "DE" },
        new countries() { Name = "Greenland", Code = "GL" },
        new countries() { Name = "Hong Kong", Code = "HK" },
        new countries() { Name = "India", Code = "IN" },
        new countries() { Name = "Italy", Code = "IT" },
        new countries() { Name = "Japan", Code = "JP" },
        new countries() { Name = "Mexico", Code = "MX" },
        new countries() { Name = "Norway", Code = "NO" },
        new countries() { Name = "Poland", Code = "PL" },
        new countries() { Name = "Switzerland", Code = "CH" },
        new countries() { Name = "United Kingdom", Code = "GB" },
        new countries() { Name = "United States", Code = "US" },
    };
    public string RemoteQuery = "new ej.data.Query().select(['FirstName']).take(10).requiresCount()";
    public string sort { get; set; } = "Ascending";
}
