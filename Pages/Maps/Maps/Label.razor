@page "/maps/label"

@using Syncfusion.Blazor.Maps
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons

@inherits SampleBaseComponent;

<div class="col-lg-9 control-section sb-property-border">
    <SfMaps>
        <MapsZoomSettings Enable="false"/>
        <MapsLayers>
            <MapsLayer ShapeData='new {dataOptions ="scripts/MapsData/usa.json"}'>
                <MapsDataLabelSettings Visible="@DatalabelVisible" LabelPath="name" SmartLabelMode="@DatalabelSmartLabelMode" IntersectionAction="@DatalabelInterSectAction"/>
                <MapsShapeSettings Autofill="true"/>
                <MapsLayerTooltipSettings Visible="true" ValuePath="name"/>
            </MapsLayer>
        </MapsLayers>
    </SfMaps>
</div>
<div class="col-lg-3 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width:100%" title="Properties">
                <tbody>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Show Labels
                        </td>
                        <td style="width: 50%">
                            <SfCheckBox Checked="@CheckBoxvalue" ValueChange="Showlabel" TChecked="bool"/>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Smart label mode
                        </td>
                        <td style="width: 50%">
                            <SfDropDownList Placeholder="Select smartlabel mode" DataSource="@SmartLabelModeData" Value="@SmartLabelModeValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="SmartLabelValueChange"/>
                                <DropDownListFieldSettings Text="Name" Value="Value"/>
                            </SfDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Intersect action
                        </td>
                        <td style="width: 50%">
                            <SfDropDownList Placeholder="Select intersect action" DataSource="@IntersectactionData" Value="@IntersectActionDataValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="IntersectActionValueChange"/>
                                <DropDownListFieldSettings Text="Name" value="Value"/>
                            </SfDropDownList>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public bool DatalabelVisible = true;
    public bool CheckBoxvalue = true;
    public SmartLabelMode DatalabelSmartLabelMode = SmartLabelMode.Trim;
    public IntersectAction DatalabelInterSectAction = IntersectAction.None;
    public string SmartLabelModeValue = "Trim";
    public string IntersectActionDataValue = "None";
    public class LabelIntersectValues {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<LabelIntersectValues> IntersectactionData = new List<LabelIntersectValues> {
        new LabelIntersectValues { Value="None", Name="None" },
        new LabelIntersectValues { Value="Trim", Name="Trim" },
        new LabelIntersectValues { Value="Hide", Name="Hide" }
    };
    public class SmartLabelValues {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<SmartLabelValues> SmartLabelModeData = new List<SmartLabelValues> {
        new SmartLabelValues { Value="Trim", Name="Trim" },
        new SmartLabelValues { Value="None", Name="None" },
        new SmartLabelValues { Value="Hide", Name="Hide" }
    };
    public void Showlabel(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args) {
        CheckBoxvalue = args.Checked;
        DatalabelVisible = args.Checked;
    }
    public void SmartLabelValueChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args) {
        SmartLabelModeValue = args.Value;
        if (args.Value == "None") {
            DatalabelSmartLabelMode = SmartLabelMode.None;
        }
        else if (args.Value == "Hide") {
            DatalabelSmartLabelMode = SmartLabelMode.Hide;
        }
        else {
            DatalabelSmartLabelMode = SmartLabelMode.Trim;
        }
    }
    public void IntersectActionValueChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args) {
        IntersectActionDataValue = args.Value;
        if (args.Value == "Trim") {
            DatalabelInterSectAction = IntersectAction.Trim;
        }
        else if (args.Value == "Hide") {
            DatalabelInterSectAction = IntersectAction.Hide;
        }
        else {
            DatalabelInterSectAction = IntersectAction.None;
        }
    }
}