@page "/HeatMapChart/LargeData"

@using Syncfusion.EJ2.Blazor.HeatMap

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_heatmapdata
@{
    SampleBrowser.CurrentSampleName = "Large Data";
    SampleBrowser.CurrentControlName = "HeatMapChart";
    SampleBrowser.CurrentControlCategory = "HeatMapChart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.HeatMapChart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the summary of user activities in GitLab account such as merge requests, push events and comments across 52 weeks in a year.
     </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
         In this example, you can see how to switch the Heatmap to canvas rendering mode.The rendering performance will be better in <code>Canvas</code> rendering mode, while loading large datasets. You can switch the rendering mode for Heatmap between <code>SVG</code> and <code>Canvas</code> using the <code>renderingMode</code> property. When the <code>renderingMode</code> property is set to <code>Auto</code> the rendering mode will be switched automatically based of the size of data source to improve the rendering performance.

         Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>"
    };
}
@*End:Hidden*@
<div class="control-section">
    <div class="row">
        <div class="col-md-12">
            <Ejsheatmap DataSource="@heatmapData">
                <HeatMapTitle Text="Annual Flight Traffic Report" TextStyle="@TextStyle"></HeatMapTitle>
                <HeatMapXAxis Minimum="@Xminimum" Maximum="@Xmaximum" IntervalType="@Syncfusion.EJ2.Blazor.HeatMap.IntervalType.Days" ValueType="@Syncfusion.EJ2.Blazor.HeatMap.ValueType.DateTime" LabelFormat="MMM" ShowLabelOn="@Syncfusion.EJ2.Blazor.HeatMap.LabelType.Months"></HeatMapXAxis>
                <HeatMapYAxis Labels="@yLabels"></HeatMapYAxis>
                <HeatMapPaletteSettings Type="@Syncfusion.EJ2.Blazor.HeatMap.PaletteType.Gradient">
                    <HeatMapPalettes>
                        <HeatMapPalette Value="150" Color="#A6DC7E"></HeatMapPalette>
                        <HeatMapPalette Value="250" Color="#DCD57E"></HeatMapPalette>
                        <HeatMapPalette Value="300" Color="#DC8D7E"></HeatMapPalette>
                    </HeatMapPalettes>
                </HeatMapPaletteSettings>
                <HeatMapCellSettings ShowLabel="false" Border="@Border"></HeatMapCellSettings>
                <HeatMapLegendSettings Visible="false"></HeatMapLegendSettings>
            </Ejsheatmap>
        </div>
    </div>
</div>
@code{

    private string[] yLabels =  new string[] { "1:00", "2:00", "3:00", "4:00", "5:00", "6:00", "7:00", "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00" };

    public FontModel TextStyle = new FontModel() { Size = "15px", FontWeight = "500", FontStyle = "Normal" };

    public object Xminimum =  new DateTime(2017, 1, 1);

    public object Xmaximum = new DateTime(2017, 12, 31);

    public BorderModel Border = new BorderModel() { Width = 0 };

    public object heatmapData = HeatMapData.GetLargeData();
}
