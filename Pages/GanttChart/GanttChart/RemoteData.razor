@page "/gantt-chart/remote-data"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor
@using blazor_samples
@using ej2_blazor_ganttdata

@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample demonstrates the way of binding data to Gantt Chart with a remote service. The Gantt Chart data source is bound to remote data using the DataManager. The data in this sample shows the various phases of barley harvesting.</p>
</SampleDescription>
<ActionDescription>
   <p>The <code>DataSource</code> property in Gantt Chart can be assigned with the instance of <code>DataManager</code> to bind remote data.
      The DataManager, which will act as an interface between the service endpoint and the Gantt Chart, will require
      the below minimal information to interact with service endpoint properly.
      <ol><li><code>DataManager->Url</code> - Defines the service endpoint to fetch data</li>
          <li><code>DataManager->Adaptor</code> - Defines the adaptor option. By default, ODataAdaptor is used for remote binding.</li>
          Adaptor is responsible for processing response and request from/to the service endpoint.<code>syncfusion/ej2-data</code>package provides some predefined adaptors which are designed to interact with particular service endpoints. They are,
          <li><code>UrlAdaptor</code> - Use this to interact any remote services. This is the base adaptor for all remote based adaptors.</li>
          <li><code>ODataAdaptor</code> - Use this to interact with OData endpoints.</li>
          <li><code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.</li>
          <li><code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.</li>
          <li><code>WebMethodAdaptor</code> - Use this to interact with web methods.</li>
           In this demo, remote data is bound by assigning service data as an instance of <code>DataManager</code> to the<code>DataSource</code> property.More information on the data binding can be found in this <a href='https://blazor.syncfusion.com/documentation/gantt-chart/data-binding/#remote-data' target='_blank'>documentation</a> section.
      </ol>
   </p>
</ActionDescription>

<div class="control-section">
    <div class="row">
        <div class="col-md-12">
            <SfGantt TValue="GanttRemoteData" TreeColumnIndex="1" Height="450px" Width="100%" AllowSelection="true" HighlightWeekends="true"
                      IncludeWeekend="true" GridLines="GridLine.Both"
					  ProjectStartDate="@ProjectStart" ProjectEndDate="@ProjectEnd" >
                <SfDataManager Url="https://ej2services.syncfusion.com/production/web-services/api/GanttData" Adaptor="Adaptors.WebApiAdaptor" CrossDomain="true"></SfDataManager>
                <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate"
                                    Duration="Duration" Progress="Progress" Dependency="Predecessor" Child="SubTasks">
                </GanttTaskFields>
                <GanttColumns>
                    <GanttColumn Field="TaskId" HeaderText="Task Id" Visible="false"></GanttColumn>
                    <GanttColumn Field="TaskName" HeaderText="Task Name" Width="250"></GanttColumn>
                    <GanttColumn Field="StartDate"></GanttColumn>
                    <GanttColumn Field="Duration"></GanttColumn>
                </GanttColumns>
                <GanttTimelineSettings TimelineUnitSize="50">
                    <GanttTopTierSettings Unit="TimelineViewMode.Month" Format="MMM dd, y"></GanttTopTierSettings>
                    <GanttBottomTierSettings Unit="TimelineViewMode.Day" Format="EEE"></GanttBottomTierSettings>
                </GanttTimelineSettings>
                <GanttLabelSettings>
                    <LeftLabelTemplate>
                        <div class="e-left-label-inner-div" style="height:22px;margin-top:7px;">
                            <span class="e-label">@((context as GanttRemoteData).TaskName)</span>
                        </div>
                    </LeftLabelTemplate>
                </GanttLabelSettings>
            </SfGantt>
        </div>
    </div>
</div>

@code{
        public DateTime ProjectStart = new DateTime(2019, 2, 24);
        public DateTime ProjectEnd = new DateTime(2019, 6, 10);
        public class GanttRemoteData
        {
            public int TaskId { get; set; }
            public string TaskName { get; set; }
            public DateTime StartDate { get; set; }
            public int? Duration { get; set; }
            public int Progress { get; set; }
            public string Predecessor { get; set; }
            public List<GanttRemoteData> SubTasks { get; set; }
        }
    }
