@page "/Charts/PolarStackedArea"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Polar StackedArea";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates polar series with stacking area type for GDP of different countries in recent years.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this example, you can see how to render and configure the stacking area type charts. Stacks the series on top of another series to avoid the overlapping of series with one another, when rendering more than one area series in same chart.
            You can use <code>Fill</code> properties to customize the stacked area. <code>DataLabel</code> is used to represent individual data and its value.
        </p>
        <p>
            Hover the chart area to view trackball and its tooltip. Touch and hold to enable trackball in touch enabled devices.
        </p>"
    };
}
@*End:Hidden*@
<div class="control-section">
    <EjsChart Title="GDP, Current Prices (in Billions)">
        <ChartTooltipsettings Enable="true">
        </ChartTooltipsettings>
        <ChartLegendSettings Visible="true">
        </ChartLegendSettings>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" LabelPlacement="LabelPlacement.OnTicks" Interval="1" Coefficient="100"></ChartPrimaryXAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@dataSource" Name="2013" xName="x" Width="2" yName="y" Type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries DataSource="@dataSource" Name="2014" xName="x" Width="2" yName="y1" Type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries DataSource="@dataSource" Name="2015" xName="x" Width="2" yName="y2" Type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries DataSource="@dataSource" Name="2016" xName="x" Width="2" yName="y3" Type="ChartSeriesType.Polar" drawType="ChartDrawType.StackingArea"></ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{
    public class PolarStackedAreaData
    {
        public string x;
        public double y;
        public double y1;
        public double y2;
        public double y3;
    }
   public List<PolarStackedAreaData> dataSource = new List<PolarStackedAreaData>
    {
            new PolarStackedAreaData { x = "JPN", y= 5156, y1= 4849, y2= 4382, y3= 4939 },
            new PolarStackedAreaData { x= "DEU", y= 3754, y1= 3885, y2= 3365, y3= 3467 },
            new PolarStackedAreaData { x = "FRA", y = 2809, y1= 2844, y2= 2420, y3= 2463 },
            new PolarStackedAreaData { x = "GBR", y= 2721, y1= 3002, y2= 2863, y3= 2629 },
            new PolarStackedAreaData { x = "BRA", y= 2472, y1= 2456, y2= 1801, y3= 1799 },
            new PolarStackedAreaData { x = "RUS", y= 2231, y1= 2064, y2= 1366, y3= 1281 },
            new PolarStackedAreaData { x = "ITA", y= 2131, y1= 2155, y2= 1826, y3= 1851 },
            new PolarStackedAreaData { x = "IND", y= 1857, y1= 2034, y2= 2088, y3= 2256 },
            new PolarStackedAreaData { x = "CAN", y= 1843, y1= 1793, y2= 1553, y3= 1529 }
    };
}