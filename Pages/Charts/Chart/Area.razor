@page "/Charts/Area"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Area";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the data about average sales comparison of two products by using default area series in the chart. Legend in the sample shows the information about the series.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the area type charts. Similar to line type series, but the area get closed and filled with series color. You can use <code>dashArray</code>, <code>width</code>, <code>fill</code> properties to customize the spline. <code>Marker</code> and <code>dataLabel</code> are used to represent individual data and its value. Legend is enabled in this example with series type shape.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart id="area" title="Average Sales Comparison">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.DateTime" LabelFormat="y" IntervalType="IntervalType.Years" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Revenue in Millions" Interval="1" LabelFormat="{value}M">
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@chartData" name="Product A" xName="xValue" width="2"
                         opacity="0.5" yName="yValue" type="ChartSeriesType.Area">               
            </ChartSeries>
            <ChartSeries dataSource="@chartData" name="Product B" xName="xValue" width="2"
                         opacity="0.5" yName="yValue1" type="ChartSeriesType.Area">              
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{

        public class AreaChartData
        {
            public DateTime xValue;
            public double yValue;
            public double yValue1;
        }

        List<AreaChartData> chartData = new List<AreaChartData>
        {
            new AreaChartData { xValue = new DateTime(2000, 01, 01), yValue = 4, yValue1 = 2.6 },
            new AreaChartData { xValue = new DateTime(2001, 01, 01), yValue = 3.0, yValue1 = 2.8 },
            new AreaChartData { xValue = new DateTime(2002, 01, 01), yValue = 3.8, yValue1 = 2.6 },
            new AreaChartData { xValue = new DateTime(2003, 01, 01), yValue = 3.4, yValue1 = 3 },
            new AreaChartData { xValue = new DateTime(2004, 01, 01), yValue = 3.2, yValue1 = 3.6 },
            new AreaChartData { xValue = new DateTime(2005, 01, 01), yValue = 3.9, yValue1 = 3 },
        };
}
