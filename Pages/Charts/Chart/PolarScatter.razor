@page "/Charts/PolarScatter"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Polar Scatter";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample illustrates trackball feature in chart. To show trackball, hover or long press the chart and you can see the point value near to the mouse point.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            This sample demonstrates the trackball behavior in chart. Trackball is used to track a data point closer to the current mouse position or touch contact point.
            You can show tooltip for individual point or group of points closer to mouse position using <code>shared</code> properties in tooltip.
        </p>
        <p>
            Hover the chart area to view trackball and its tooltip. Touch and hold to enable trackball in touch enabled devices.
        </p>
        <br></br>
        <p><b>Injecting Module</b></p>
        <p>
            Chart component features are segregated into individual feature-wise modules. To use Trackball, we need to inject
            <code>Tooltip</code> module into <code>services</code>.
        </p>
        <p>
            More information on the Tooltip and Trackball can be found in this &nbsp;
            <a target=""_blank"" href=""http://ej2.syncfusion.com/react/documentation/chart/api-tooltipSettingsModel.html"">documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@
    <div class="control-section">
        <EjsChart id="container" title="Real GDP Growth">
            <ChartTooltipSettings enable="true">
            </ChartTooltipSettings>
            <ChartPrimaryYAxis Minimum="0" Maximum="8" Interval="2"></ChartPrimaryYAxis>
            <ChartPrimaryXAxis Interval="1" Coefficient="100" LabelPlacement="LabelPlacement.OnTicks" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
            <ChartLegendSettings Visible="true">
            </ChartLegendSettings>
            <ChartSeriesCollection>
                <ChartSeries dataSource="@dataSource" name="2015" xName="x" width="2" yName="y" type="ChartSeriesType.Polar" drawType="ChartDrawType.Scatter">
                    <ChartMarker Visible="true" Height="10" Width="10">
                        <ChartDataLabel Name="text"></ChartDataLabel>
                    </ChartMarker>
                </ChartSeries>
                <ChartSeries dataSource="@dataSource" name="2016" xName="x" width="2" yName="y1" type="ChartSeriesType.Polar" drawType="ChartDrawType.Scatter">
                    <ChartMarker Visible="true" Height="10" Width="10" Shape="ChartShape.Diamond">
                        <ChartDataLabel Name="text"></ChartDataLabel>
                    </ChartMarker>
                </ChartSeries>
                <ChartSeries dataSource="@dataSource" name="2017" xName="x" width="2" yName="y2" type="ChartSeriesType.Polar" drawType="ChartDrawType.Scatter">
                    <ChartMarker Visible="true" Height="10" Width="10" Shape="ChartShape.Triangle" >
                        <ChartDataLabel Name="text"></ChartDataLabel>
                    </ChartMarker>
                </ChartSeries>
            </ChartSeriesCollection>
        </EjsChart>
    </div>

@code {
    public class PolarScatterData
    {
        public string text;
        public string x;
        public double y;
        public double y1;
        public double y2;
    }
    List<PolarScatterData> dataSource = new List<PolarScatterData>
    {
          new PolarScatterData { text= "Myanmar", x= "MMR", y= 7.3, y1= 6.3, y2= 7.5 },
                new PolarScatterData { text= "India", x= "IND", y= 7.9, y1= 6.8, y2= 7.2 },
                new PolarScatterData { text= "Bangladesh", x= "BGD", y= 6.8, y1= 6.9, y2= 6.9 },
                new PolarScatterData { text= "Cambodia", x= "KHM", y= 7.0, y1= 7.0, y2= 6.9 },
                new PolarScatterData { text= "China", x= "CHN", y= 6.9, y1= 6.7, y2= 6.6 },
                new PolarScatterData { text= "Bhutan", x= "BTN", y= 6.1, y1= 6.2, y2= 5.9 },
                new PolarScatterData { text= "Iceland", x= "ISL", y= 4.1, y1= 7.2, y2= 5.7 },
                new PolarScatterData { text= "Nepal", x= "NPL", y= 2.7, y1= 0.6, y2= 5.5 },
                new PolarScatterData { text= "Pakistan", x= "PAK", y= 4.0, y1= 4.7, y2= 5.0 },
                new PolarScatterData { text= "Poland", x= "POL", y= 3.9, y1= 2.7, y2= 3.4 },
                new PolarScatterData { text= "Australia", x= "AUS", y= 2.4, y1= 2.5, y2= 3.1 },
                new PolarScatterData { text= "Korea", x= "KOR", y= 2.8, y1= 2.8, y2= 2.7 },
                new PolarScatterData { text= "Singapore", x= "SGP", y= 1.9, y1= 2.0, y2= 2 },
                new PolarScatterData { text= "Canada", x= "CAN", y= 0.9, y1= 1.4, y2= 1.9 },
                new PolarScatterData { text= "Germany", x= "DEU", y= 1.5, y1= 1.8, y2= 1.6 },
                new PolarScatterData { text= "Denmark", x= "DNK", y= 1.6, y1= 1.1, y2= 1.5 },
                new PolarScatterData { text= "France", x= "FRA", y= 1.3, y1= 1.3, y2= 1.4 },
                new PolarScatterData { text= "Austria", x= "AUT", y= 1.0, y1= 1.5, y2= 1.4 }
    };
}