@page "/Charts/AxisCrossing"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Axis Crossing";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample illustrates an interpolation of data points between linear and cubic by using spline and line series.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        This sample demonstrates the axis crossing behavior in chart. Axis can be positioned anywhere in the chart area by using the crossesAt property of axis. This property specifies where the horizontal axis should intersect or cross the vertical axis and vice-versa.
    </p>
    <p>
        Default value of crossesAt property is null. So, you can use placeNextToAxisLine property to place the axis labels and ticks next to axis line. When there are multiple axes, you can choose an axis to cross by using crossesInAxis property. If the axis name is not valid, primaryXAxis or primaryYAxis will be used for crossing, by default.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart Title="Spline Interpolation" >
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis Minimum="-8" Maximum="8" Interval="2" CrossesAt="0" MinorTicksPerInterval="3">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="-8" Maximum="8" Interval="2" CrossesAt="0" MinorTicksPerInterval="3">
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@lineData" Name="Line Interpolation" XName="xValue" Width="2"
                         Opacity="1" YName="yValue1" Type="ChartSeriesType.Line">              
            </ChartSeries>
            <ChartSeries DataSource="@splineData" Name="Cubic Spline Interpolation" XName="xValue" Width="2"
                         Opacity="1" YName="yValue1" Type="ChartSeriesType.Spline">
            </ChartSeries>
            <ChartSeries DataSource="@scatterData" Name="Data points" XName="xValue" Width="2"
                         Opacity="1" YName="yValue1" Type="ChartSeriesType.Scatter">
                <ChartMarker Visible="true" Width="12" Height="12">
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{

    public class AxisData
    {
        public Nullable<double> xValue { get; set; }
        public Nullable<double> yValue1 { get; set; }

    }
    public List<AxisData> scatterData = new List<AxisData>
            {
                new AxisData { xValue = -6, yValue1 = 2},
                new AxisData { xValue = -3, yValue1 = -4 },
                new AxisData { xValue = 1.5, yValue1 = 3.5 },
                new AxisData { xValue = 6, yValue1 = 4.5}
            };

    public List<AxisData> splineData = new List<AxisData>
            {
                new AxisData { xValue = -6, yValue1 = 2},
                new AxisData { xValue = -5.291, yValue1 = 0.1 },
                new AxisData { xValue = -5, yValue1 = -0.77},
                new AxisData { xValue = -3, yValue1 = -4},
                new AxisData { xValue = -0.6, yValue1 = -0.965},
                new AxisData { xValue = -0.175, yValue1 = 0.1},
                new AxisData { xValue = 0.1, yValue1 = 0.404},
                new AxisData { xValue = 1.5, yValue1 = 3.5},
                new AxisData { xValue = 3.863, yValue1 = 5.163},
                new AxisData { xValue = 6, yValue1 = 4.5}
            };

    public List<AxisData> lineData = new List<AxisData>
            {
                new AxisData { xValue = -6, yValue1 = 2},
                new AxisData { xValue = -5, yValue1 = 0.1 },
                new AxisData { xValue = -4.511, yValue1 = -0.977},
                new AxisData { xValue = -3, yValue1 = -4},
                new AxisData { xValue = -1.348, yValue1 = -1.247},
                new AxisData { xValue = -0.6, yValue1 = 0.11},
                new AxisData { xValue = 0.1, yValue1 = 1},
                new AxisData { xValue = 1.5, yValue1 = 3.5},
                new AxisData { xValue = 6, yValue1 = 4.5}
            };
}
