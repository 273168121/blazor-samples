@page "/Charts/PolarLine"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Polar Line";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the data about Alaska Weather Statistics - 2016 with default polar line series in the chart.
        Data points values are showed by using data label.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the polar line type charts. Similar to column charts, but the orientation of y axis is horizontal instead of vertical.
        You can use <code>border</code>, <code>fill</code> properties to customize the data appearance. <code>dataLabel</code> is used to represent individual data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the bar series can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}
@*End:Hidden*@
<div class="control-section">
    <EjsChart id="container" title="Alaska Weather Statistics - 2016">
        <ChartTooltipsettings enable="true">
        </ChartTooltipsettings>
        <ChartPrimaryXAxis Interval="1" LabelPlacement="LabelPlacement.OnTicks" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" Title="Months"></ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Temperature (Celsius)" Minimum="-25" Maximum="25" Interval="10" EdgeLabelPlacement="EdgeLabelPlacement.Shift" LabelFormat="{value}°C"></ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@dataSource" name="Germany" xName="xValue" width="2" opacity="1" yName="yValue" type="ChartSeriesType.Polar">
                <ChartMarker Visible="true" Height="10" Width="10" Shape="ChartShape.Pentagon"></ChartMarker>
            </ChartSeries>
            <ChartSeries dataSource="@dataSource" name="England" xName="xValue" width="2" opacity="1" yName="yValue1" type="ChartSeriesType.Polar">
                <ChartMarker Visible="true" Height="10" Width="10" Shape="ChartShape.Pentagon"></ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
    </div>

    @code{
        public class PolarLineChartData
        {
            public string xValue;
            public double yValue;
            public double yValue1;
        }
        List<PolarLineChartData> dataSource =  new List<PolarLineChartData>
        {
               new PolarLineChartData { xValue = "Jan", yValue = -7.1, yValue1 = -17.4 },
                new PolarLineChartData { xValue = "Feb", yValue = -3.7, yValue1 = -15.6  },
                new PolarLineChartData { xValue = "Mar", yValue = 0.8, yValue1 = -12.3  },
                new PolarLineChartData { xValue = "Apr", yValue = 6.3, yValue1 = -5.3 },
                new PolarLineChartData { xValue = "May", yValue = 13.3, yValue1 = 1.0 },
                new PolarLineChartData { xValue = "Jun", yValue = 18.0, yValue1 =  6.9  },
                new PolarLineChartData { xValue = "Jul", yValue = 19.8 , yValue1 = 9.4 },
                new PolarLineChartData { xValue = "Aug", yValue = 18.1, yValue1 = 7.6 },
                new PolarLineChartData { xValue = "Sep", yValue = 13.1 , yValue1 = 2.6 },
                new PolarLineChartData { xValue = "Oct", yValue = 4.1, yValue1 = -4.9},
                new PolarLineChartData { xValue = "Nov", yValue = -3.8, yValue1 = -13.4 },
                new PolarLineChartData { xValue = "Dec", yValue = -6.8, yValue1 = -16.4 },
        };

    }
    