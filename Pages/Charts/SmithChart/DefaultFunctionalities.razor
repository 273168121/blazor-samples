@page "/smith-chart/default-functionalities"

@using Syncfusion.Blazor.Charts;
@using Syncfusion.Blazor.DropDowns;

@inherits SampleBaseComponent;

<div class="col-lg-9 control-section sb-property-border">
        <SfSmithchart RenderType="ChartRenderType">
            <SmithchartTitle Visible="true" Text="Transmission details">
            </SmithchartTitle>
            <SmithchartLegendSettings Visible="true" Shape="Circle">
            </SmithchartLegendSettings>
            <SmithchartSeriesCollection>
                <SmithchartSeries Name="Transmission1" Points="@FirstTransmissionData"                                  
                                  EnableAnimation="true">
                    <SmithchartSeriesTooltip Visible="true"></SmithchartSeriesTooltip>
                    <SmithchartSeriesMarker Visible="true" Shape="Circle">
                        <SmithchartSeriesMarkerBorder Width="2">
                        </SmithchartSeriesMarkerBorder>
                    </SmithchartSeriesMarker>
                </SmithchartSeries>
                <SmithchartSeries Name="Transmission2" Points='@SecondTransmissionData'
                                  EnableAnimation="true">
                    <SmithchartSeriesTooltip Visible="true"></SmithchartSeriesTooltip>
                    <SmithchartSeriesMarker Visible="true" Shape="Circle">
                        <SmithchartSeriesMarkerBorder Width="2">
                        </SmithchartSeriesMarkerBorder>
                    </SmithchartSeriesMarker>
                </SmithchartSeries>
            </SmithchartSeriesCollection>
        </SfSmithchart>
    </div>
<div class="col-md-3 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width: 100%" >
                <tbody>
                    <tr>
                        <td style="width:55%">
                            <div>Render Type</div>
                        </td>
                        <td>
                            <div>
                                <SfDropDownList TValue="string" TItem="RenderData" DataSource="@RenderDataSource" Value="@TypeValue">
                                    <DropDownListEvents TValue="string" ValueChange="RenderTypeChange"></DropDownListEvents>
                                    <DropDownListFieldSettings Text="Name" Value="Name"></DropDownListFieldSettings>
                                </SfDropDownList>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    .printIconCss {
        float: right;
        background: transparent;
        box-shadow: none;
        border-color: transparent;
        border-radius: 2px;
        color: inherit;
        font-size: 12px;
        text-transform: capitalize;
        margin-top: 4px;
        height: 28px;
        font-weight: 400;
        font-family: inherit;
    }

    .e-de-icon-Print:before {
        content: "\e723";
    }
</style>


@code {
    private RenderType ChartRenderType = RenderType.Impedance;
    private String TypeValue = "Impedance";

    public List<ISmithChartPoint> FirstTransmissionData = new List<ISmithChartPoint> {
        new ISmithChartPoint { Resistance= 10, Reactance= 25 }, new ISmithChartPoint { Resistance= 8, Reactance= 6 },
        new ISmithChartPoint { Resistance= 6, Reactance= 4.5 }, new ISmithChartPoint { Resistance= 4.5, Reactance= 2 },
        new ISmithChartPoint { Resistance= 3.5, Reactance= 1.6 }, new ISmithChartPoint { Resistance= 2.5, Reactance= 1.3 },
        new ISmithChartPoint { Resistance= 2, Reactance= 1.2 }, new ISmithChartPoint { Resistance= 1.5, Reactance= 1 },
        new ISmithChartPoint { Resistance= 1, Reactance= 0.8 }, new ISmithChartPoint { Resistance= 0.5, Reactance= 0.4 },
        new ISmithChartPoint { Resistance= 0.3, Reactance= 0.2 }, new ISmithChartPoint { Resistance= 0, Reactance= 0.15 },
    };
    public List<ISmithChartPoint> SecondTransmissionData = new List<ISmithChartPoint> {
        new ISmithChartPoint { Resistance= 20, Reactance= -50 }, new ISmithChartPoint { Resistance= 10, Reactance= -10 },
        new ISmithChartPoint { Resistance= 9, Reactance= -4.5 }, new ISmithChartPoint { Resistance= 8, Reactance= -3.5 },
        new ISmithChartPoint { Resistance= 7, Reactance= -2.5 }, new ISmithChartPoint{ Resistance= 6, Reactance= -1.5 },
        new ISmithChartPoint { Resistance= 5, Reactance= -1 }, new ISmithChartPoint { Resistance= 4.5, Reactance= -0.5 },
        new ISmithChartPoint { Resistance= 2, Reactance= 0.5 }, new ISmithChartPoint { Resistance= 1.5, Reactance= 0.4 },
        new ISmithChartPoint { Resistance= 1, Reactance= 0.4 }, new ISmithChartPoint { Resistance= 0.5, Reactance= 0.2 },
        new ISmithChartPoint { Resistance= 0.3, Reactance= 0.1 }, new ISmithChartPoint { Resistance= 0, Reactance= 0.05 },
    };
    public class RenderData
    {
        public string Name { get; set; }
    }
    private List<RenderData> RenderDataSource = new List<RenderData> {
        new RenderData { Name = "Impedance"},
        new RenderData { Name = "Admittance"},
    };
    private void RenderTypeChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        this.TypeValue = args.Value;
        if (args.Value == "Admittance")
        {
            this.ChartRenderType = RenderType.Admittance;
        }
        else
        {
            this.ChartRenderType = RenderType.Impedance;
        }
    }
}