@page "/SmithChart/DefaultFunctionalities"


@using Syncfusion.EJ2.Blazor.Charts;


@*Hidden:Lines*@
@using ej2_blazor_samples
@{
        SampleBrowser.CurrentSampleName = "Default Functionalities";
        SampleBrowser.CurrentControlName = "SmithChart";
        SampleBrowser.CurrentControlCategory = "SmithChart";
        SampleBrowser.CurrentControl = SampleBrowser.Config.SmithChart;
        SampleBrowser.ActionDescription = new string[] {
        @" <p>
        This sample visualizes two transmissions in Smith chart with 'Impedance' rendering type.
    </p>"
    };
        SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render a smith chart with multiple series. Enabled legend to denote the series in smith chart.
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover the mouse over a data point or tap a data point in touch enabled devices
    </p>
    <br />
    <p style=""font-weight: 500"">Injecting Module</p>
    <p>

        Smith chart component features are segregated into individual feature-wise modules. To use a tooltip, inject the <code>Tooltip</code> module using the < code > SmithChart.Inject(TooltipRender) </ code > method, and use a legend by injecting the<code> Legend</ code > module using the < code > SmithChart.Inject(Legend) </ code > method.


            </ p > "
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsSmithchart >
         <SmithchartTitle  Visible='true'
            Text="Transmission details">
        </SmithchartTitle>
        <SmithchartLegendSettings Visible='true'
            Shape="Circle">
        </SmithchartLegendSettings>
        <SmithchartSeriesCollection>
        <SmithchartSeries Name="Transmission1" Points='@FirstTransmissionData'
                EnableAnimation='true'>
                <SmithchartSeriesTooltip  Visible='true' ></SmithchartSeriesTooltip>
                <SmithchartSeriesMarker Visible='true' Shape='Circle'>
                    <SmithchartSeriesMarkerBorder Width='2'>
                    </SmithchartSeriesMarkerBorder>
                </SmithchartSeriesMarker>
        </SmithchartSeries>
        <SmithchartSeries Name="Transmission2" Points='@SecondTransmissionData'
                EnableAnimation='true'>
                <SmithchartSeriesTooltip  Visible='true' ></SmithchartSeriesTooltip>
                <SmithchartSeriesMarker Visible='true' Shape='Circle'>
                    <SmithchartSeriesMarkerBorder Width='2'>
                    </SmithchartSeriesMarkerBorder>
                </SmithchartSeriesMarker>
        </SmithchartSeries>
        </SmithchartSeriesCollection>
    </EjsSmithchart>
    </div>
<style>

    .printIconCss {
        float: right;
        background: transparent;
        box-shadow: none;
        border-color: transparent;
        border-radius: 2px;
        color: inherit;
        font-size: 12px;
        text-transform: capitalize;
        margin-top: 4px;
        height: 28px;
        font-weight: 400;
        font-family: inherit;
    }
    .e-de-icon-Print:before {
        content: "\e723";
    }


</style>


@code {
    public class SmithDataSource {
        public double? resistance;
        public double? reactance;
    };
        public List<SmithDataSource> FirstTransmissionData = new List<SmithDataSource>  { 
            new SmithDataSource { resistance= 10, reactance= 25 }, new SmithDataSource { resistance= 8, reactance= 6 },
            new SmithDataSource { resistance= 6, reactance= 4.5 }, new SmithDataSource { resistance= 4.5, reactance= 2 },
            new SmithDataSource { resistance= 3.5, reactance= 1.6 }, new SmithDataSource { resistance= 2.5, reactance= 1.3 },
            new SmithDataSource { resistance= 2, reactance= 1.2 }, new SmithDataSource { resistance= 1.5, reactance= 1 },
            new SmithDataSource { resistance= 1, reactance= 0.8 }, new SmithDataSource { resistance= 0.5, reactance= 0.4 },
            new SmithDataSource { resistance= 0.3, reactance= 0.2 }, new SmithDataSource { resistance= 0, reactance= 0.15 },
        };
        public List<SmithDataSource> SecondTransmissionData  = new List<SmithDataSource>  { 
            new SmithDataSource { resistance= 20, reactance= -50 }, new SmithDataSource { resistance= 10, reactance= -10 },
            new SmithDataSource { resistance= 9, reactance= -4.5 }, new SmithDataSource { resistance= 8, reactance= -3.5 },
            new SmithDataSource { resistance= 7, reactance= -2.5 }, new SmithDataSource{ resistance= 6, reactance= -1.5 },
            new SmithDataSource { resistance= 5, reactance= -1 }, new SmithDataSource { resistance= 4.5, reactance= -0.5 },
            new SmithDataSource { resistance= 2, reactance= 0.5 }, new SmithDataSource { resistance= 1.5, reactance= 0.4 },
            new SmithDataSource { resistance= 1, reactance= 0.4 }, new SmithDataSource { resistance= 0.5, reactance= 0.2 },
            new SmithDataSource { resistance= 0.3, reactance= 0.1 }, new SmithDataSource { resistance= 0, reactance= 0.05 },
        };
}