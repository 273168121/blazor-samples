@page "/Schedule/BlockEvents"

@using Syncfusion.EJ2.Blazor.Schedule

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Blocking Dates and Time";
    SampleBrowser.CurrentControlName = "Scheduler";
    SampleBrowser.CurrentControlCategory = "Scheduler";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Schedule;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This example shows how to block specific time intervals or days on the Scheduler.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this example, few blocked events are defined to block the specific time range with the text “Unavailable”.
            No events can be created on those blocked time range as well as edited through it. These blocked events can be
            defined by setting <code>isBlock</code> field to true within the <code>EventSettings</code> and assigned
            altogether with the events <code>DataSource</code>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <div class="content-wrapper">
        <EjsSchedule ID="schedule" Width="100%" Height="650px" CssClass="block-events" CurrentView="View.TimelineDay" SelectedDate="new DateTime(2018, 8, 1)">
            <ScheduleGroup Resources="@GroupData"></ScheduleGroup>
            <ScheduleResources>
                <ScheduleResource DataSource="@ResourceData" Field="EmployeeId" Title="Employees" Name="Employee" TextField="text" IdField="id" ColorField="color" StartHourField="startHour" EndHourField="endHour"></ScheduleResource>
            </ScheduleResources>
            <ScheduleEventSettings DataSource="@Data.GetBlockData()"></ScheduleEventSettings>
            <ScheduleViews>
                <ScheduleView Option="View.Day"></ScheduleView>
                <ScheduleView Option="View.TimelineDay"></ScheduleView>
                <ScheduleView Option="View.TimelineMonth"></ScheduleView>
            </ScheduleViews>
        </EjsSchedule>
    </div>
</div>

@code{
    static ScheduleData Data = new ScheduleData();
    public string[] GroupData { get; set; } = { "Employee" };
    public object ResourceData { get; set; } = new List<object> {
        new { text = "Alice", id = 1, groupId = 1, color = "#bbdc00", designation = "Content writer" },
        new { text = "Nancy", id = 2, groupId = 2, color = "#9e5fff", designation = "Designer" },
        new { text = "Robert", id = 3, groupId = 1, color = "#bbdc00", designation = "Software Engineer" },
        new { text = "Robson", id = 4, groupId = 2, color = "#9e5fff", designation = "Support Engineer" },
        new { text = "Laura", id = 5, groupId = 1, color = "#bbdc00", designation = "Human Resource" },
        new { text = "Margaret", id = 6, groupId = 2, color = "#9e5fff", designation = "Content Analyst" }
    };
}