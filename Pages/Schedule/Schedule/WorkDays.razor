@page "/Schedule/WorkDays"

@using Syncfusion.EJ2.Blazor.Schedule

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Work Days";
    SampleBrowser.CurrentControlName = "Scheduler";
    SampleBrowser.CurrentControlCategory = "Scheduler";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Schedule;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
           This demo showcases how to set customized working days as well as first day of a week on Scheduler.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this demo, the working days of a week can be set on Scheduler using the
            <code>WorkDays</code> property which accepts the collection of day indexes (from 0 to 6) of a week. By default, it is set to
            <code>[1, 2, 3, 4, 5]</code> and in this demo, it has been set to
            <code>[1, 3, 5]</code> which means that
            <code>Monday, Wednesday, Friday</code> is being set as working days of a week and is visually differentiated from non-working days. The working hours usually
            applies only on these given working days.
        </p>
        <p>
            The first day of the week can also be set on the Schedule by making use of the
            <code>FirstDayOfWeek</code> property, doing so which will make the Scheduler to start with that day.
        </p>
        <p>
            <strong>Note: </strong> Here, Sunday is always denoted as 0, Monday as 1 and so on.
        </p>"
    };
}
@*End:Hidden*@
<div class="col-lg-12 control-section">
    <div class="schedule-wrapper">
        <EjsSchedule ID="schedule" Width="100%" Height="650px" CurrentView="View.WorkWeek" SelectedDate="new DateTime(2018, 2, 15)" WorkDays="@WorkingDays" FirstDayOfWeek="1">
            <ScheduleViews>
                <ScheduleView Option="View.Day"></ScheduleView>
                <ScheduleView Option="View.Week"></ScheduleView>
                <ScheduleView Option="View.WorkWeek"></ScheduleView>
                <ScheduleView Option="View.Month"></ScheduleView>
            </ScheduleViews>
            <ScheduleEventSettings DataSource="@Data.GetEmployeeEventData()"></ScheduleEventSettings>
        </EjsSchedule>
    </div>
</div>
@code{
    static ScheduleData Data = new ScheduleData();
    static int[] WorkingDays = new int[] { 1, 3, 5 };
}