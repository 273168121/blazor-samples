@page "/Dialog/Resizable"

@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Popups
@using Syncfusion.EJ2.Blazor.Buttons

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Resizable";
    SampleBrowser.CurrentControlName = "Dialog";
    SampleBrowser.CurrentControlCategory = "Dialog";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Dialog;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the resize operation of the dialog component. To resize the modal dialog, select and resize a dialog using its handle (grip) within the sample container.
            The ""open dialog"" button is used to reopen the dialog if it is closed.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @" <p>
            Users can create resizable modal dialog by setting the enableResize property to true, which is used to change the size of a dialog dynamically and view its content with expanded mode.
            When you configure the target property along with enableResize property, the dialog can be resized within its specified target container.
        </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section" id="target">    
    <button id="normalbtn" class="e-btn" onclick="@onClicked">Open</button>
    <EjsDialog ID="dialog" @ref="dialogObj" Target="#target" Header="@DialogHeader" Width="300px" AllowDragging="true" EnableResize="true" ShowCloseIcon="true">
        <ChildContent>
            <span>This is a dialog with resizable support.</span>
        </ChildContent>
    </EjsDialog>
</div>

@code {
    EjsDialog dialogObj;

    string DialogHeader = "Resize Me!!!";
    private void onClicked()
    {
        this.dialogObj.Show();
    }
}
