@namespace blazor_samples.Shared
@implements IDisposable;

@inject IJSRuntime JsRuntime;

<div class="sf-image-carousel ic-wrapper">
    <button class="ic-btn ic-prev sb-icons" aria-label="Previous" @onclick=@(PrevSlide)></button>
    <div class="ic-container" style=@("width:" + containerWidth)>
        <div class="ic-slide ic-clone">
            <div class="ic-img-div">
                <a href=@(cItems[cItems.Length - 1].HyperLink)>
                    <img class="ic-img" alt="Image" src=@(cItems[cItems.Length - 1].ImagePath) />
                </a>
            </div>
            <div class="ic-text-area">
                <table>
                    <tr>
                        <th>
                            <div class="ic-header">@(cItems[cItems.Length - 1].Header)</div>
                        </th>
                    </tr>
                    <tr>
                        <th>
                            <div class="ic-content">@(cItems[cItems.Length - 1].Content)</div>
                        </th>
                    </tr>
                </table>
            </div>
        </div>
        @for (var i = 0; i < cItems.Length; i++)
        {
            <div class=@("ic-slide" + (i == 0 ? " ic-current" : ""))>
                <div class="ic-img-div">
                    <a href=@(cItems[i].HyperLink)>
                        <img class="ic-img" alt="Image" src=@(cItems[i].ImagePath) />
                    </a>
                </div>
                <div class="ic-text-area">
                    <table>
                        <tr>
                            <th>
                                <div class="ic-header">@(cItems[i].Header)</div>
                            </th>
                        </tr>
                        <tr>
                            <th>
                                <div class="ic-content">@(cItems[i].Content)</div>
                            </th>
                        </tr>
                    </table>
                </div>
            </div>
        }
        <div class="ic-slide ic-clone">
            <div class="ic-img-div">
                <a href=@(cItems[0].HyperLink)>
                    <img class="ic-img" alt="Image" src=@(cItems[0].ImagePath) />
                </a>
            </div>
            <div class="ic-text-area">
                <table>
                    <tr>
                        <th>
                            <div class="ic-header">@(cItems[0].Header)</div>
                        </th>
                    </tr>
                    <tr>
                        <th>
                            <div class="ic-content">@(cItems[0].Content)</div>
                        </th>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <button class="ic-btn ic-next sb-icons" aria-label="Next" @onclick=@(NextSlide)></button>
    <div class="ic-progress">
        <div class="ic-progress-bar"></div>
    </div>
</div>

@code {
    private string containerWidth { get; set; }
    private CarouselItem[] cItems = new CarouselItem[3];
    private CarouselItem cItem1 = new CarouselItem("Appointment Planner",
    "An appointment scheduling application for doctors in a clinic to manage their appointments with patients.",
    "./images/Showcase_Images/Appointment_Planner.png", "https://blazor.syncfusion.com/showcase/appointmentplanner/");
    private CarouselItem cItem2 = new CarouselItem("Expense Tracker",
        "Track and visualize your daily expenses in a handy way with great UI.",
        "./images/Showcase_Images/expense.png", "https://blazor.syncfusion.com/showcase/expensetracker/");
    private CarouselItem cItem3 = new CarouselItem("Health Tracker",
        "Track and visualize the calories consumed and daily activities like steps taken, water consumption and sleeping duration.",
        "./images/Showcase_Images/Health_Tracker.png", "https://blazor.syncfusion.com/showcase/healthtracker/");

    private void PrevSlide()
    {
        JsRuntime.InvokeVoidAsync("prevSlide");
    }

    private void NextSlide()
    {
        JsRuntime.InvokeVoidAsync("nextSlide");
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        cItems[0] = cItem1;
        cItems[1] = cItem2;
        cItems[2] = cItem3;
        containerWidth = ((cItems.Length + 2) * 1000) + "px";
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        
        if (firstRender)
        {
            JsRuntime.InvokeVoidAsync("initCarousel");
        }
    }

    public void Dispose()
    {
        cItems = null;
    }
}
